{"version":3,"sources":["MainContext.tsx","components/pages/HomePage/HeroSection.tsx","components/pages/HomePage/ResponsiveCurriculumSection.tsx","components/pages/HomePage/ContinuousPDSection.tsx","components/shared/VerticalRuler.tsx","components/pages/HomePage/InquirySection.tsx","components/pages/HomePage/Footer.tsx","components/pages/HomePage/HomePage.tsx","helpers/date-helpers.ts","components/pages/AdminPage/TableRow.tsx","components/shared/Icon.tsx","components/shared/Alert.tsx","components/pages/AdminPage/Filter.tsx","components/pages/AdminPage/UserTable.tsx","components/pages/AdminPage/AdminPage.tsx","components/pages/CreateUserPage/Feedback.tsx","components/pages/CreateUserPage/CreateUserForm.tsx","components/pages/CreateUserPage/CreateUserPage.tsx","components/pages/NotFoundPage.tsx","components/navigation/Router.tsx","components/navigation/Navbar.tsx","App.tsx","index.tsx"],"names":["MainContext","createContext","MainProvider","Consumer","props","useState","users","setUsers","districts","setDistricts","useEffect","axios","get","then","res","data","catch","err","console","log","Provider","value","children","useMainContext","useContext","HeroSection","className","style","maxWidth","src","alt","ResponsiveCurriculumSection","id","backgroundColor","width","objectFit","fontSize","lineHeight","height","margin","opacity","ContinuousPDSection","color","display","position","top","transform","VerticalRuler","left","InquirySection","minHeight","marginBottom","minWidth","Footer","HomePage","dateObjectToSqlTimestamp","date","isoParts","toISOString","split","datePart","timePart","TableRow","rowData","columnOrder","columnData","validateRow","editRow","deleteRow","setRowData","readOnly","setReadOnly","errorStyle","setErrorStyle","Fragment","map","propertyName","index","datum","size","idealSize","toString","length","calculateInputSize","isID","toLowerCase","type","name","onChange","e","newRowData","target","handleChange","onClick","isLockingRow","validRow","Icon","Alert","headerContent","bodyContent","showCloseButton","closeButtonFunction","borderRadius","Filter","setFilteredUsers","activeStatus","setActiveStatus","selectedDistrict","setSelectedDistrict","usersFilteredByActiveStatus","usersFilteredByActiveStatusAndDistrict","filter","user","active","district","parseInt","backgroundImage","hasCorrectFormat","regex","test","UserTable","filteredUsers","deletedUserId","setDeletedUserId","errors","setErrors","hasMounted","useRef","current","validateUser","verified","created_at","last_name","trim","push","first_name","middle_initial","isASingleLetter","isEmail","email","string","dateParts","month","part","day","year","time","timeParts","hours","minutes","seconds","fixedParts","lastChar","charAt","substring","indexOf","Date","formattedDateToSqlTimestamp","toUpperCase","editUser","updatedUser","newUsers","userIndex","deleteUser","columnHeader","stringParts","isoString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","i","sqlTimestampToFormattedDate","row","error","fill","viewBox","verticalAlign","d","AdminPage","Feedback","CreateUserForm","firstName","setFirstName","firstNameError","setFirstNameError","firstNameTouched","setFirstNameTouched","lastName","setLastName","lastNameError","setLastNameError","lastNameTouched","setLastNameTouched","middleInitial","setMiddleInitial","middleInitialError","setMiddleInitialError","middleInitialTouched","setMiddleInitialTouched","setEmail","emailError","setEmailError","emailTouched","setEmailTouched","setActive","activeError","setActiveError","setDistrict","districtError","setDistrictError","districtOptions","setDistrictOptions","loading","setLoading","setData","setError","isSuccess","setIsSuccess","isError","setIsError","validateFirstName","validateLastName","validateMiddleInitial","validateEmail","validateActive","validateDistrict","handleSubmit","a","preventDefault","formIsValid","validators","validator","undefined","fName","lName","newUser","Promise","resolveFx","rejectFx","setTimeout","message","status","statusText","mutationResponse","currentUsers","autoComplete","noValidate","htmlFor","placeholder","onBlur","checked","disabled","role","marginRight","CreateUserPage","NotFoundPage","fontFamily","textShadow","Router","exact","path","render","component","Navbar","brand","to","CLASS_SHOW","CLASS_COLLAPSE","CLASS_COLLAPSING","collapseTargetId","currentTarget","dataset","targetEl","document","querySelector","classList","contains","getBoundingClientRect","offsetHeight","add","remove","scrollHeight","activeClassName","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afdb6391.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { MainContextValue, User, District }                      from './interfaces';\nimport axios                                                     from 'axios';\n\n\n/* =========================================================================\n                           \n========================================================================= */\n\n\nexport const MainContext  = createContext({} as MainContextValue);\nexport const MainConsumer = MainContext.Consumer;\n\n\nexport const MainProvider = (props: { children: React.ReactNode }) => {\n  const [ users,     setUsers ]     = useState<User[]>([]);\n  const [ districts, setDistricts ] = useState<District[]>([]);\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/data/users.json')\n    .then(res  => { setUsers([ ...res.data ]); })\n    .catch(err => { console.log(err);          });\n  }, []);\n\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/data/districts.json')\n    .then(res => { setDistricts([ ...res.data ]); })\n    .catch(err => { console.log(err); });\n  }, []);\n\n\n  return (\n    <MainContext.Provider value={{ users, setUsers, districts }}>\n      { props.children }\n    </MainContext.Provider>\n  );\n};\n\n\nexport function useMainContext(){\n  const value = useContext(MainContext);\n  return value;\n}","import React from 'react'; \n\n\nexport function HeroSection(): React.ReactElement | null {\n  return (\n    <div className=\"py-5 bg-white\">\n      <img \n        className=\"d-block w-100 mx-auto\"\n        style={{ maxWidth: 1000 }}\n        src=\"images/home-page-image.jpg\"\n        alt=\"Home_Page copy.jpg\"         \n      />\n    </div>\n  );\n}\n","import React from 'react'; \n\n\nexport function ResponsiveCurriculumSection(): React.ReactElement | null {\n  return (\n    <section \n      id=\"responsive-curriculum-section\"\n      className=\"py-5 px-3 p-sm-5 text-white\" \n      style={{ backgroundColor: 'rgb(132, 135, 156)' }}\n    >\n      <div className=\"section-inner mx-auto\" style={{ maxWidth: 1000 }}>\n        <h2 className=\"font-montserrat\">Responsive Curriculum</h2>\n\n\n        <div className=\"row\">\n          <div className=\"col col-lg-8 d-flex flex-column align-items-center align-items-md-start pe-md-5\">\n            <img \n              className=\"d-block d-md-none mx-auto my-4\"\n              style={{ \n                width: '100%',\n                maxWidth: 150,\n                objectFit: 'fill', \n              }}\n              src=\"images/responsive-curriculum.png\"\n              alt=\"Inquiry-based supplies\"\n            />\n\n\n            <p className=\"font-lato mb-0\" style={{ fontSize: 20, lineHeight: 1.25 }}>\n              The answers to tomorrow's problems can't be found in the back of a social studies textbook. \n              The skills needed in the modern workplace aren't practiced on a worksheet.  \n            </p>\n\n\n            <hr style={{ width: 250, height: 1, margin: '25px 0', opacity: 1 }} />\n            \n\n            <p className=\"font-lato\" style={{ fontSize: 20, lineHeight: 1.25 }}>\n              Inquiry Journeys, inquirED's elementary social studies curriculum develops the \n              skills and builds the content knowledge students need to succeed.   \n            </p>\n\n          \n            <button className=\"btn btn-outline-light mt-auto py-2 px-5 font-montserrat border-2 rounded-3\">Learn More</button>\n          </div>\n\n\n          {/* ====================== */}\n\n\n          <div className=\"col col-lg-4 d-none d-md-flex justify-content-center align-items-center\">\n\n            <img \n              className=\"d-block\"\n              style={{ \n                width: '100%',\n                maxWidth: 350,\n                objectFit: 'fill', \n              }}\n              src=\"images/responsive-curriculum.png\"\n              alt=\"Inquiry-based supplies\"\n            />\n          </div>\n        </div>{/* End of <div className=\"row\"> */}\n      </div>{/* End of <div className=\"section-inner\" */}\n    </section>\n  );\n}\n","import React from 'react'; \n\n\nexport function ContinuousPDSection(): React.ReactElement | null {\n  return (\n    <section \n      id=\"continuous-pd-section\"\n      className=\"py-5 px-3 p-sm-5\" \n      style={{ color: 'rgb(71,74,99)' }}\n    >\n      <div className=\"section-inner mx-auto\" style={{ maxWidth: 1000 }}>\n        <h2 className=\"font-montserrat\">Continuous PD & Learning</h2>\n\n\n        <div className=\"row\">\n          <div className=\"col d-none d-md-flex align-items-center\">\n\n            <img \n              style={{ \n                display: 'block',\n                position: 'relative',\n                top: -25,\n                width: '75%',\n                maxWidth: 275,\n                objectFit: 'fill', \n                transform: 'rotate(-15deg)'\n              }}\n              src=\"images/continuous-pd.png\"\n              alt=\"inquiry-based ideas\" \n            />\n          </div>\n\n\n          {/* ====================== */}\n\n\n          <div className=\"col d-flex flex-column align-items-center align-items-md-end pe-md-5\">\n            <img \n              className=\"d-block d-md-none mx-auto my-4\"\n              style={{ \n                width: '100%',\n                maxWidth: 150,\n                objectFit: 'fill', \n              }}\n              src=\"images/continuous-pd.png\"\n              alt=\"inquiry-based ideas\" \n            />\n\n            <p className=\"font-lato mb-0\" style={{ fontSize: 20, lineHeight: 1.25 }}>\n              Inquiry requires a shift in teaching practice—which can feel overwhelming to teachers.\n            </p>\n\n            <hr style={{ width: 250, height: 1, margin: '25px 0', opacity: 1 }} />\n            \n            <p className=\"font-lato\" style={{ fontSize: 20, lineHeight: 1.25 }}>\n              inquirED’s professional learning resources offer support to teachers, \n              building their practice and confidence as they implement inquiry.\n            </p>\n          \n            <button className=\"btn btn-outline-gray mt-auto py-2 px-5 font-montserrat border-2 rounded-3\">Learn More</button>\n          </div>\n        </div>{/* End of <div className=\"row\"> */}\n      </div>{/* End of <div className=\"section-inner\" */}\n    </section>\n  );\n}\n","import React from 'react'; \n\n\ninterface VerticalRulerProps {\n  color?:     string;\n  height?:    number | string;\n  className?: string;\n  style?:     React.CSSProperties;\n}\n\n\nexport function VerticalRuler({ \n  color     = '#333', \n  height    = '75%', \n  className = '', \n  style     = {} }: VerticalRulerProps): React.ReactElement | null {\n  return (\n    <div\n      className={className}\n      style={{ \n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 1, \n        height: height,\n        backgroundColor: color,\n        ...style\n      }}\n    />\n  );\n}\n","import React             from 'react'; \nimport { VerticalRuler } from '../../shared/VerticalRuler';\n\n\nexport function InquirySection(): React.ReactElement | null {\n  return (\n    <section \n      id=\"inquiry-section\"\n      className=\"position-relative py-5 px-3 p-sm-5 text-white\" \n      style={{ backgroundColor: 'rgb(121, 139, 147)' }}\n    >\n      <VerticalRuler color=\"#FFF\" className=\"d-none d-md-block\" />\n\n\n      {/* ====================== */}\n\n\n      <div className=\"section-inner mx-auto\" style={{ maxWidth: 1000 }}>\n        <div className=\"row pt-5\">\n          <div className=\"col col-12 col-md-6 d-flex flex-column align-items-center px-5 ps-md-0 pe-md-5\" style={{ minHeight: 500 }}>\n            <img \n              className=\"d-block\"\n              style={{ \n                height: 125,\n                marginBottom: 75,\n                maxWidth: 250\n              }}\n              src=\"images/inquiry-journeys.png\"\n              alt=\"Inquiry_journeys_white.png\" \n            />\n     \n            <h2 className=\"mb-5 font-montserrat\">Begin Your Journey</h2>\n\n            <p className=\"font-lato\" style={{ fontSize: 20, lineHeight: 1.25 }}>\n              Watch a demo. Start a conversation. Learn how inquirED's elementary social studies curriculum can \n              transform learning in your school or district.\n            </p>\n\n            <button \n              className=\"btn btn-outline-light mt-auto py-2 px-5 font-montserrat border-2 rounded-3\"\n              style={{ minWidth: 210 }}\n            >Learn More</button>  \n          </div>\n\n          <div className=\"col col-12 d-md-none\">\n            <hr style={{ width: '90%', height: 1, margin: '75px auto', opacity: 1 }} />  \n          </div>\n\n\n          {/* ====================== */}\n\n\n          <div className=\"col col-12 col-md-6 d-flex flex-column align-items-center px-5 ps-md-5 pe-md-0\" style={{ minHeight: 500 }}>\n            <img \n              className=\"d-block\"\n              style={{ height: 150, marginBottom: 50 }}\n              src=\"images/inquiry-webinars.png\"\n              alt=\"webinar_white.png\" \n            />\n   \n            <h2 className=\"mb-5 font-montserrat\">Sign Up For a Webinar</h2>\n\n            <p className=\"font-lato\" style={{ fontSize: 20, lineHeight: 1.25 }}>\n              Choose from a selection of monthly webinars to join in the conversation with \n              teachers and administrators across the country.\n            </p>\n\n            <button \n              className=\"btn btn-outline-light mt-auto py-2 font-montserrat border-2 rounded-3\"\n              style={{ minWidth: 210 }}\n            >Upcoming Webinars</button>\n          </div>\n\n        </div>{/* End of <div className=\"row\"> */}\n      </div>{/* End of <div className=\"section-inner\" */}\n    </section>\n  );\n}\n","import React from 'react'; \n\n\nexport function Footer(): React.ReactElement | null {\n  \n  return (\n    <footer className=\"d-flex p-5 text-white\" style={{ backgroundColor: '#484A63' }}>\n      <div className=\"flex-grow-1\">\n        <div className=\"d-flex justify-content-center justify-content-md-start flex-wrap\">\n          <div className=\"font-montserrat me-3 mb-3 text-nowrap\">Curriculum</div>\n          <div className=\"font-montserrat me-3 mb-3 text-nowrap\">PD & Learning</div>\n          <div className=\"font-montserrat me-3 mb-3 text-nowrap\">Resources</div>\n          <div className=\"font-montserrat mb-3 text-nowrap\">About Us</div>\n        </div>\n\n        <div className=\"d-flex justify-content-center justify-content-md-start fw-lighter fst-italic\">\n          Copyright &#169; inquirED 2020\n        </div>\n      </div>\n\n      {/* img wrapper element needed for Safari */}\n      <figure className=\"d-none d-md-block\" style={{ width: 100 }}>\n        <img \n          className=\"d-block\"\n          style={{ position: 'relative', top: -15, width: '100%' }}\n          src=\"images/logo.png\"\n          alt=\"inquirED Logo\" \n        />\n      </figure>\n    </footer>\n  );\n}\n","import React                           from 'react'; \nimport { RouteComponentProps }         from 'react-router-dom';\nimport { MainContextValue }            from '../../../interfaces';\nimport { HeroSection }                 from './HeroSection';\nimport { ResponsiveCurriculumSection } from './ResponsiveCurriculumSection';\nimport { ContinuousPDSection }         from './ContinuousPDSection';\nimport { InquirySection }              from './InquirySection';\nimport { Footer }                      from './Footer';\n\n\ninterface HomePageProps extends RouteComponentProps  {\n  value: MainContextValue;\n}\n\n\nexport function HomePage(props: HomePageProps): React.ReactElement | null {\n  return (\n    <div className=\"flex-grow-1\">  \n      <HeroSection />\n      <ResponsiveCurriculumSection />\n      <ContinuousPDSection />\n      <InquirySection />\n      <Footer />  \n    </div>\n  );\n}\n","export function sqlTimestampToFormattedDate(string: string){\n  // The created_at field in the JSON is an SQL-style timestamp, \n  // which is like an abbreviated ISO-8601, so we first need to rebuild it.\n  const stringParts          = string.split(' ');\n  const isoString            = `${stringParts[0]}T${stringParts[1]}.000Z`;\n  const months               = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  \n  const date                 = new Date(isoString); \n  const year                 = date.getFullYear();\n  let month:   number|string = date.getMonth()     \n  const day                  = date.getDate();\n  let hours:   number|string = date.getHours();\n  let minutes: number|string = date.getMinutes();\n  let seconds: number|string = date.getSeconds();\n  \n  month                              = months[month];\n  const timeParts: (number|string)[] = [ hours, minutes, seconds ];\n  \n  for (let i = 0; i < timeParts.length; i++){\n    let timePart: number|string = timeParts[i].toString();\n  \tif (timePart.length === 1){ timePart = `0${timePart}`; }\n    timeParts[i] = timePart; \n  }\n\n  hours   = timeParts[0];\n  minutes = timeParts[1];\n  seconds = timeParts[2];\n  \n  // Expected behavior: the formatted dates rendered in the UI will be offset by local timezone.\n  return `${month} ${day}, ${year} ${hours}:${minutes}:${seconds}`; \n}\n\n\n/* ========================================================================\n\n======================================================================== */\n///////////////////////////////////////////////////////////////////////////////////\n//\n//  This function works great, but it assumes it is receiving\n//  the precise string format. In cases where it's not, it may actually break.\n//  Consequently, any string passed into this function should first be tested against\n//  the following regex:\n//\n//    const dateRegex = /^(January|February|March|April|May|June|July|August|September|October|November|December)\\s(0?[1-9]|[1-2][0-9]|3[0-1]),?\\s(19|20)\\d{2}(\\s([0-1][0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?)?$/i;\n//\n//  That said, I have still built the function such that it mitigates some potential issues\n//  including extra spaces, etc. It could be improved further by allowing for month \n//  abbreviations: ['jan', feb, 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'].\n//\n///////////////////////////////////////////////////////////////////////////////////\n\n\nexport function formattedDateToSqlTimestamp(string: string){ // string : \"August 1, 2021 00:00:00\"\n  ///////////////////////////////////////////////////////////////////////////////////\n  //\n  //  The date constructor can take non-standard date strings, and parse them.\n  //  However, this is somewhat of an unsafe practice. The best approach is to\n  //  Take the formatted string and parse it yourself, then convert the values\n  //  to integers, and plug them into new Date() :\n  //\n  //    const date = new Date(year, month, day, hours, minutes, seconds);\n  //\n  //  Obviously, the implementation is dependendent on the particular\n  //  format of the expected string argument.\n  //\n  ///////////////////////////////////////////////////////////////////////////////////\n  \n  \n  let dateParts              = string.split(' ');\n  dateParts                  = dateParts.filter(part => part !== \"\"); //Remove potential double-spaces.\n  const months               = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n  let month: number|string   = dateParts[0].trim();\n  let day:   number|string   = dateParts[1].trim(); \n  let year:  number|string   = dateParts[2].trim();\n  let time:  string          = dateParts[3];\n  time                       = typeof time !== 'undefined' ? time.trim() : \"00:00:00\"; // Add a default time if none was specified.\n  time                       = time.length === 5 ? `${time}:00` : time;                // If times is only 5 chars long assume military time shorthand, and add ':00'.\n  const timeParts            = time.split(':');\n  let hours:   number|string = timeParts[0];\n  let minutes: number|string = timeParts[1];\n  let seconds: number|string = timeParts[2];\n  const allParts             = [ year, month, day, hours, minutes, seconds ];\n\n\n  // Remove the expected ',' after day. Also remove possible '.' that may occur when spacing in inputs.\n  const fixedParts = allParts.map(part => {\n    const lastChar = part.charAt(part.length-1);\n    if (lastChar === ',' || lastChar === '.'){ return part.substring(0, part.length - 1); }\n    return part;\n  });\n\n\n  year    = fixedParts[0];\n  month   = fixedParts[1];\n  day     = fixedParts[2];\n  hours   = fixedParts[3];\n  minutes = fixedParts[4];\n  seconds = fixedParts[5];\n\n\n  // Convert string values to integers:\n  year                       = parseInt(year,    10);\n  month                      = months.indexOf(month.toLowerCase()); // Convert month to number (0-11);\n  day                        = parseInt(day,     10);\n  hours                      = parseInt(hours,   10);\n  minutes                    = parseInt(minutes, 10);\n  seconds                    = parseInt(seconds, 10);\n\n  \n  //Create new Date, convert to ISO string, then format into quasi ISO as needed for this project.\n  const date                 = new Date(year, month, day, hours, minutes, seconds);\n  const isoString            = date.toISOString();\n  const isoParts             = isoString.split('T');\n  const datePart             = isoParts[0];\n  const timePart             = isoParts[1].split('.')[0];\n\n  return `${datePart} ${timePart}`;\n}\n\n\n\n/* ========================================================================\n\n======================================================================== */\n// This function converts a date object to \"YYYY-MM-DD HH:MM:SS\"\n\n\nexport function dateObjectToSqlTimestamp(date: Date){ \n  const isoString = date.toISOString();        // => \"1978-05-09T06:00:00.000Z\"\n  const isoParts  = isoString.split('T');      // => [\"1978-05-09\", \"06:00:00.000Z\"]\n  const datePart  = isoParts[0];               // => \"1978-05-09\"\n  const timePart  = isoParts[1].split('.')[0]; // => \"06:00:00\" \n  return `${datePart} ${timePart}`;\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { User }                       from '../../../interfaces';\n\n\ntype ObjectAsAny<Type extends {}> = { \n  [Property in keyof Type]: any;\n};\n\n\ninterface TableRowProps<T> {\n  rowData:      T;\n  columnData:   string[];\n  columnOrder:  string[],\n  validateRow?: (rowData: ObjectAsAny<T>) => User | void; //! \n  editRow?:     (rowData: User) => void;                  //! \n  deleteRow?:   () => void; \n}\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\nexport function TableRow<T extends {}>(props: TableRowProps<T>):React.ReactElement | null {\n  const {  rowData: data, columnOrder, columnData, validateRow, editRow, deleteRow } = props;\n  const [ rowData,    setRowData ]    = useState({ ...data });\n  const [ readOnly,   setReadOnly ]   = useState(true);\n  const [ errorStyle, setErrorStyle ] = useState('');\n\n\n  const toggleEdit = () => {\n    const isUnlockingRow = readOnly;\n    const isLockingRow   = !readOnly;\n\n    if (isUnlockingRow){\n      setReadOnly(false);\n    }\n    \n    else if (isLockingRow && editRow){ \n      const validRow = (typeof validateRow === \"function\") && validateRow(rowData);\n\n      if (validRow){\n        setReadOnly(true);\n        setErrorStyle('');\n        editRow(validRow); \n      } else {\n        setErrorStyle('is-error');\n      }\n    } \n  };\n\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\n    const newRowData                    = { ...rowData };\n    const propertyName                  = e.target.name;\n    const value                         = e.target.value;\n    newRowData[propertyName as keyof T] = value as unknown as T[keyof T];  \n    setRowData(newRowData);\n  };\n  \n\n  // Used to dynamically resize input width based on input value length.\n  const calculateInputSize = (datum: any) => {\n    const idealSize       = (datum.toString().length) + 1; //! For some reason it needs the + 1.\n    const constrainedSize = idealSize > 30 ? 30  : idealSize;\n    return constrainedSize;\n  };\n\n\n  // Anytime TableRow is passed new data, update local rowData with data.\n  useEffect(() => { setRowData({ ...data }); }, [data]);\n\n\n  return (\n    <React.Fragment>\n      <tr className={errorStyle}>\n        { \n          columnOrder.map((propertyName, index) => {\n            const datum = rowData[propertyName as keyof typeof rowData];\n            const size  = calculateInputSize(datum);\n            const isID  = (propertyName.toLowerCase() === 'id' || propertyName.toLowerCase() === '_id');\n            \n\n            // Disallow id from being editable.\n            const inputClassName = () => {\n              if (isID){ return 'form-control-plaintext'; }\n              return readOnly ? 'form-control-plaintext' : 'form-control border-gray'\n            };\n\n\n            return (\n              <td key={index} className=\"align-middle p-1\">\n                <span className=\"column-data\">{ columnData[index] }:</span>\n\n                <input \n                  className={inputClassName()}\n                  readOnly={isID ? true : readOnly} \n                  type=\"text\" \n                  name={propertyName}\n                  value={ (datum as unknown as string | number | readonly string[] | undefined) }\n                  onChange={(e) => handleChange(e, index) }\n                  size={size}\n                />  \n              </td>\n            );\n          }) \n        }\n\n        {\n          (editRow || deleteRow) && (\n            <td className=\"align-middle\">\n              <div className=\"function-button-container\">\n              { editRow   && <button className={`btn btn-blue btn-sm font-montserrat shadow-sm${deleteRow ? ' me-2' : ''}`} style={{ minWidth: 75 }} onClick={toggleEdit}>Edit</button> }\n              { deleteRow && <button className=\"btn btn-red btn-sm font-montserrat shadow-sm\"                               style={{ minWidth: 75 }} onClick={() => deleteRow()}>Delete</button> }\n              </div> \n            </td>\n          ) \n        }\n      </tr>  \n    </React.Fragment> \n  );\n}\n\n\n\n","import React from 'react'; \n// This component works in conjunction with bootstrap-icons.css,\n// and bootstrap-icons.woff2 / woff\n\n\ninterface IconProps {\n  name?:    string;\n  size?:    string | number;\n  color?:   string;\n  className?: string;\n  style?:   React.CSSProperties;\n}\n\n\nexport const Icon = ({ \n  name      = 'question-circle', \n  size      = 'inherit', \n  color     = 'currentColor', \n  className = '',\n  style     = {} \n}: IconProps) => {\n\n  return (\n    <i \n      className={ className ? `bi bi-${name} ${className}` : `bi bi-${name}`} \n      style={{ \n        fontSize: size, \n        color: color, \n        ...style \n      }}\n    ></i>   \n  );\n}","import React                from 'react';\nimport { FlexibleFunction } from '../../interfaces';\n\n\ninterface AlertProps {\n  className?:           string;\n  style?:               React.CSSProperties;\n  color?:               string\n  headerContent? :      React.ReactNode | null;\n  bodyContent?:         React.ReactNode | null;\n  showCloseButton?:     boolean;\n  closeButtonFunction?: FlexibleFunction; \n}\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\nexport const Alert = ({ \n  style           = {},\n  className       = '',\n  color           = 'gray', \n  headerContent   = null, \n  bodyContent     = null,\n  showCloseButton = true,\n  closeButtonFunction }: AlertProps): React.ReactElement | null => {\n  \n  return (\n    <div \n      // The biggest issue with using Bootstrap utility classes for the default component style is that\n      // they always have !important on them, which means it's very difficult to override them.\n      // For that reason it's often better to create the default styles using the style attribute.\n      // That way you can override the default style with a utility class, or with style overwrites.\n      className={`alert alert-${color} alert-dismissible fade show border border-${color}${className ? ` ${className}` : ''}`}\n      \n      style={{ \n        position: 'fixed', \n        top: '50%', \n        left: '50%', \n        width: '100%', \n        maxWidth: 600, \n        transform: 'translate(-50%, -50%)',\n        borderRadius: 10,\n        ...style\n      }} \n    >\n      { headerContent }\n\n      { bodyContent }\n\n      { showCloseButton && (\n        <button \n          className=\"btn-close\"\n          // https://stackoverflow.com/questions/39194122/is-it-safe-to-pass-undefined-in-reacts-onclick\n          // It's perfectly valid to pass in undefined as the onClick handler....\n          onClick={closeButtonFunction} \n          aria-label=\"Close\"\n          type=\"button\"  \n        ></button>\n      )}\n    </div>\n  );\n};\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useMainContext }             from '../../../MainContext';\nimport { User }                       from '../../../interfaces';\n// The instructions specifically said to build a toggle that filtered\n// active/inactive users. However, it made more sense to handle it in \n// a trinary manner: all | active | inactive.\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\ninterface FilterProps {\n  users: User[];\n  setFilteredUsers: React.Dispatch<React.SetStateAction<User[]>>;\n}\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\nexport const Filter = (props: FilterProps) => {\n  const { districts } = useMainContext();\n\n  const { users, setFilteredUsers }               = props;\n  // An activeStatus of null is meant to correpond to All users.\n  const [ activeStatus,     setActiveStatus ]     = useState< null | boolean>(null);\n  const [ selectedDistrict, setSelectedDistrict ] = useState('all');\n\n\n  const handleActiveStatusButtonClick = () => {\n    if      (activeStatus === null){ setActiveStatus(true);  }\n    else if (activeStatus === true){ setActiveStatus(false); }\n    else {                           setActiveStatus(null);  }\n  };\n\n\n  /* ========================\n          \n  ======================== */\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  //\n  //  Filter users by active status, and then store in usersFilteredByActiveStatus.\n  //  Filter usersFilteredByActiveStatus by district, and then store in usersFilteredByActiveStatusAndDistrict.\n  //  Iniitally I used useLayoutEffect, which runs synchronously to avoid a flash of \n  //  an <Alert /> message indicating that there are \"no users based on that criteria\". \n  //  The flash occurs on first mount. The downside is that there's a slight delay \n  //  when loading the Admin page, and the console warns: [Violation] 'click' handler took 168ms\n  // \n  //  A better approach is to implement hasMounted = useRef(true false); inside of UserTable.tsx. \n  //  Then inside of a useEffect, update it on mount. Then in the JSX use hasmounted.current as a\n  //  flag to indicate whether or not it is okay to show the associated <Alert />:\n  //  if (users.length > 0 && filteredUsers.length === 0 && hasMounted.current === true){ ... }\n  //\n  //  This is the best approach, and avoids the blocking behavior associated with useLayoutEffect.\n  //  That said, running useLayoutEffect FROM UserTable.tsx is another alternative, and cleaner,\n  //  than running it here:\n  //\n  //    useLayoutEffect(() => { setFilteredUsers([ ...users]); }, [users]);\n  //  \n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  useEffect(() => {\n    let usersFilteredByActiveStatus:            User[] = [];\n    let usersFilteredByActiveStatusAndDistrict: User[] = [];\n\n    // Filter users by active status. An activeStatus of null \n    // corresponds users without any filtering by active status.\n    if (activeStatus === null){\n      usersFilteredByActiveStatus = users;\n    } else {\n      usersFilteredByActiveStatus = users.filter(user => user.active === activeStatus);\n    }\n\n\n    // Filter usersFilteredByActiveStatus by district.\n    // Remember that in this App user.id is type number,\n    // but form fields convert numbers to strings.\n    if (selectedDistrict === 'all'){\n      usersFilteredByActiveStatusAndDistrict = usersFilteredByActiveStatus;\n    } else {\n      usersFilteredByActiveStatusAndDistrict = usersFilteredByActiveStatus.filter(user => user.district === parseInt(selectedDistrict, 10));\n    }\n\n    setFilteredUsers(usersFilteredByActiveStatusAndDistrict);\n  }, [users, activeStatus, selectedDistrict, setFilteredUsers]);\n\n\n  /* ========================\n          \n  ======================== */\n\n\n  return (\n    <React.Fragment>\n      <div className=\"d-flex justify-content-center align-items-center flex-wrap text-nowrap mb-4\">\n        <div className=\"mb-3\">\n          <label className=\"me-2 text-gray font-montserrat\">Filter by Active Status:</label>\n          <input\n            className=\"btn btn-blue btn-sm me-4 font-montserrat shadow\" \n            style={{ minWidth: 75 }}\n            onClick={handleActiveStatusButtonClick}\n            type=\"button\"\n            value={(activeStatus === null) ? 'All' : (activeStatus === true) ? 'Active' : 'Inactive'}\n          />\n        </div>\n\n\n        <div className=\"mb-3\">\n          <label className=\"me-2 text-gray font-montserrat\">Filter by District:</label>\n          <select \n            className=\"form-select btn btn-blue btn-sm pe-4 font-montserrat text-truncate shadow\" \n            style={{ maxWidth: 300, backgroundImage: `url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23FFFFFF' stroke-linecap='round' stroke-linejoin='round' stroke-width='4' d='M2 5l6 6 6-6'/%3e%3c/svg%3e\")` }}\n            value={selectedDistrict}\n            onChange={(e) => setSelectedDistrict(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            { districts.map(district => <option key={district.id} className=\"text-truncate\" value={district.id}>{district.name}</option>) }\n          </select>\n        </div>\n      </div>\n    </React.Fragment>    \n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { User }            from '../../../interfaces';\nimport { sqlTimestampToFormattedDate, formattedDateToSqlTimestamp } from '../../../helpers/date-helpers';\nimport { TableRow }        from './TableRow';\nimport { Alert, Icon }     from '../../shared'; \nimport { Filter }          from './Filter';\n\n\n//! Duplicate\nfunction hasCorrectFormat(value: string, regex: RegExp){\n  if (!regex.test(value)){ return false; }\n  return true;\n}\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\ninterface FlexibleUser {\n  id:              number | string;\n  first_name:      string;\n  last_name:       string;\n  email:           string;\n  verified:        boolean | string;\n  middle_initial?: string  | null;\n  created_at:      string;\n  district:        number  | string;\n  active:          boolean | string;\n}\n\n\ninterface UserTableProps {\n  users: User[];\n  setUsers: React.Dispatch<React.SetStateAction<User[]>>;\n}\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\nconst UserTable = (props: UserTableProps):React.ReactElement | null => {\n  const { users, setUsers }                 = props;\n  const [ filteredUsers, setFilteredUsers ] = useState<User[]>([]); // Set from within <Filter />\n  const [ deletedUserId, setDeletedUserId ] = useState<string | number | null>(null);\n  const [ errors,        setErrors ]        = useState<string[]>([]);\n  const columnData                          = [\"ID\", \"Last Name\", \"First Name\", \"M.I.\", \"Email\", \"District\", \"Verified\", \"Created\", \"Active\", \"\"];\n  const hasMounted                          = useRef(false);\n\n\n  ///////////////////////////////////////////////////////////////////////////////////\n  //\n  //  hasMounted.current is used as a conditional flag for preventing\n  //  an <Alert /> from showing on mount when users is populated, but \n  //  filtered users has yet to be set, as an alternative, you could do this here:\n  //  React.useLayoutEffect(() => { setFilteredUsers([ ...users]); }, [users]);\n  //\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  \n  useEffect(() => {\n    if (hasMounted.current === false){\n      hasMounted.current = true;\n    }\n  }, []);\n\n\n  /* ========================\n        validateUser()\n  ======================== */\n  ///////////////////////////////////////////////////////////////////////////////////\n  //\n  //  1. validateUser() receives a FlexibleUser object.\n  //  2. Each value in that object (except id) is validated.\n  //  3. If a validation test fails, an error string is pushed to the errors array.\n  //  4A. If there are no errors, a validUser is returned\n  //  4B. If there are errors then setErrors(errors);\n  //\n  //  The validation patterns here are not exactly the same as those used in\n  //  CreateNewUser.tsx, but they very closely resemble them.\n  //\n  ///////////////////////////////////////////////////////////////////////////////////\n\n\n  const validateUser = (rowData: FlexibleUser): User | void => {\n    const errors:string[] = [];\n    // id is not validated because admin is disallowed from modifying it.\n    let verified:   boolean | undefined;\n    let created_at: string  | undefined;\n    let active:     boolean | undefined;\n\n\n    if (rowData.last_name.trim().length === 0){\n      errors.push(\"Last name is required.\");\n    } else if (!hasCorrectFormat(rowData.last_name, /^[a-zA-Z]*$/)){\n      errors.push(\"Last name must be only letters.\");\n    }\n\n    /* ===================== */\n\n    if (rowData.first_name.trim().length === 0){\n      errors.push(\"First name is required.\");\n    } else if (!hasCorrectFormat(rowData.first_name, /^[a-zA-Z]*$/)){\n      errors.push(\"First name must be only letters.\");\n    }\n\n    /* ===================== */\n\n\n    if (typeof rowData.middle_initial === 'string'){\n      const isASingleLetter = hasCorrectFormat(rowData.middle_initial, /^[a-zA-Z]$/);\n\n      if (rowData.middle_initial.length > 1){\n        errors.push(\"Middle initial must only be one character.\");\n      } else if (rowData.middle_initial.length === 1 && !isASingleLetter){\n        errors.push(\"Middle initial must be a letter!\");\n      }\n    }\n\n    /* ===================== */\n\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email\n    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/; // eslint-disable-line\n    const isEmail    = hasCorrectFormat(rowData.email, emailRegex);\n\n    if (rowData.email.trim().length === 0){\n      errors.push(\"Email is required.\");\n    } else if (!isEmail){ \n      errors.push(\"Must be an email!\"); \n    } \n\n    /* ===================== */\n\n    const isPositiveInteger = hasCorrectFormat(rowData.district as string, /^[0-9]*$/);\n    if (!isPositiveInteger){ \n      errors.push(\"District must be a positive integer!\"); \n    } \n\n    /* ===================== */\n\n    if (rowData.verified.toString().toLowerCase() === 'true' || rowData.verified.toString().toLowerCase() === 't'){\n      verified = true;\n    } else if (rowData.verified.toString().toLowerCase() === 'false' || rowData.verified.toString().toLowerCase() === 'f'){\n      verified = false;\n    } else {\n      errors.push(\"The Verified field must be 'True' or 'False'.\");\n    }\n\n    /* ===================== */\n\n    const dateRegex   = /^(January|February|March|April|May|June|July|August|September|October|November|December)\\s(0?[1-9]|[1-2][0-9]|3[0-1]),?\\s(19|20)\\d{2}(\\s([0-1][0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?)?$/i;\n    created_at        = rowData.created_at.trim(); // Allows for a little bit more flexibility without erroring.\n    const dateIsValid = dateRegex.test(created_at);\n\n\n    if (!dateIsValid){\n      // Expected behavior: an error alert will show up in the UI, and the date\n      // will revert back to what it was previously.\n      errors.push(\"The date should be formatted as: 'month day, year HH:MM:SS'.\");\n    } else {\n      // Expected behavior: submitting \"August 1, 2021 00:00:00\" / \"August 1, 2021 00:00\" / \"August 1, 2021\" / \"August 1 2021\"\n      // will create a value of: \"2021-08-01 06:00:00\", and will rerender\n      // in the browser as \"August 1, 2021 00:00:00\"\n      created_at = formattedDateToSqlTimestamp(created_at);\n    } \n\n    /* ===================== */\n\n    if (rowData.active.toString().toLowerCase() === 'true' || rowData.active.toString().toLowerCase() === 't'){\n      active = true;\n    } else if (rowData.active.toString().toLowerCase() === 'false' || rowData.active.toString().toLowerCase() === 'f'){\n      active = false;\n    } else {\n      errors.push(\"The Active field must be 'True' or 'False'.\");\n    }\n\n    /* ===================== */\n\n    if (errors.length === 0 && typeof verified !== 'undefined' && typeof created_at !== 'undefined'  && typeof active !== 'undefined'){\n      const validUser:User = { \n        id:         parseInt(rowData.id as string),\n        first_name: rowData.first_name, \n        last_name:  rowData.last_name, \n        middle_initial: typeof rowData.middle_initial === 'string' && rowData.middle_initial.length > 0 ? rowData.middle_initial.toUpperCase() : null,\n        email:      rowData.email,\n        verified:   verified,\n        created_at: (created_at as unknown as string), // Temporary hack.\n        district:   parseInt(rowData.district as string, 10),\n        active: active\n      };\n      return validUser;\n    } \n\n    setErrors(errors);\n  };\n\n\n  /* ========================\n          editUser()\n  ======================== */\n\n\n  const editUser = (updatedUser: User): void => {\n    const newUsers      = [ ...users];\n    // Get user index by id:\n    // https://stackoverflow.com/questions/10557486/in-an-array-of-objects-fastest-way-to-find-the-index-of-an-object-whose-attribu\n    const userIndex     = newUsers.map(user => user.id).indexOf(updatedUser.id);\n    newUsers[userIndex] = updatedUser;\n    setUsers(newUsers);\n    setFilteredUsers(newUsers);\n  };\n\n\n  /* ========================\n          deleteUser()\n  ======================== */\n\n\n  const deleteUser = (): void => {\n    if (!deletedUserId){ return; }\n\n    // Optimistically update users. Then only revert back if API request is 'unsuccessful'.\n    // Unlike in CreateUserForm, I did not mock out the API flow here.\n    const newUsers = users.filter(user => user.id !== deletedUserId);\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    //\n    //  It's pretty safe to assume that newUsers has successfully filtered\n    //  out the user with the given userId. We could add a check to compare\n    //  the length of newUsers to users. However, we would then have to be\n    //  sure that the application wasn't updating users somewhere else\n    //  (e.g., another person messing with the database).\n    //  In practice, the confirmation would normally come from an API response.\n    //\n    ///////////////////////////////////////////////////////////////////////////////////\n    setUsers(newUsers);\n    setDeletedUserId(null);\n  };\n\n\n  /* ========================\n        renderTable()\n  ======================== */\n\n\n  const renderTable = () => {\n    if (filteredUsers.length > 0){\n      return (\n        <table id=\"user-table\" className=\"table table-bordered custom-table-hover custom-table-striped mx-auto mb-5 mx-auto text-center shadow-sm\">\n          <thead>\n            <tr>\n              { columnData.map((columnHeader, index) => <th key={index} className=\"px-1 py-2\">{ columnHeader }</th>) }\n            </tr>\n          </thead>\n        \n          <tbody>\n            { \n              filteredUsers.map(user => {\n                const { id, last_name, first_name, email, district } = user;\n                const middle_initial = user.middle_initial ? user.middle_initial : '';\n                const verified       = user.verified ? 'True' : 'False';\n                const created_at     = sqlTimestampToFormattedDate(user.created_at);\n                const active         = user.active ? 'True' : 'False';\n                const row            = { id,   last_name,   first_name,   middle_initial,   email,   district,   verified,   created_at,   active }; // Could instead implement with Map\n                const columnOrder    = [\"id\", \"last_name\", \"first_name\", \"middle_initial\", \"email\", \"district\", \"verified\", \"created_at\", \"active\" ]\n                \n\n                return (\n                  <TableRow \n                    key={user.id} \n                    rowData={row} \n                    columnData={columnData}\n                    columnOrder={columnOrder}\n                    validateRow={validateUser}\n                    editRow={editUser}\n                    deleteRow={() => setDeletedUserId(id)}\n                  />\n                );\n              })\n            }\n          </tbody> \n        </table>\n      );\n    } \n\n    return null;\n  };\n\n\n  /* ========================\n        renderAlert()\n  ======================== */\n  // Conditionally render an alert for confirming user deletion and for editing errors.\n\n\n  const renderAlert = () => {\n    if (errors.length > 0){\n      return (\n        <Alert \n          color=\"red\"                 // Default: 'gray'\n          className=\"border-2 shadow\" // Default: '\n          style={{}}                  // Default: {}\n          headerContent={             // Default : null\n            <h4 className=\"alert-heading mb-3 font-montserrat\">\n              <Icon name=\"exclamation-triangle-fill\" size={28} />\n              Whoops!\n            </h4>\n          }\n          bodyContent={ // Default : null\n            <React.Fragment>\n              <ul className=\"child-mb-2\">\n                { errors.map((error, index) => <li key={index} className=\"font-montserrat\">{ error }</li>) }\n              </ul>\n\n              <p className=\"font-montserrat\">All values for that row have reverted to their original state prior to editing.</p>\n\n              <button \n                className={`d-block mx-auto btn btn-red font-montserrat shadow-sm`} \n                style={{ minWidth: 100 }} \n                onClick={() => setErrors([])}\n              >Close</button>\n            </React.Fragment>\n          }\n\n          showCloseButton={true}                    // Default : true\n          closeButtonFunction={() => setErrors([])} // No default\n        />\n      );\n    }\n\n    if (deletedUserId || deletedUserId === 0){\n      return (\n        <Alert \n          color=\"red\"              \n          className=\"border-2 shadow\" \n          style={{}}                 \n          headerContent={          \n            <h4 className=\"alert-heading mb-3 font-montserrat\">\n              <Icon name=\"exclamation-triangle-fill\" size={28} />\n              Warning!\n            </h4>\n          }\n          bodyContent={ \n            <React.Fragment>\n              <p className=\"font-montserrat\">Are you sure you want to delete user {deletedUserId}?</p>\n\n              <div className=\"d-flex justify-content-between mx-auto\" style={{ maxWidth: 250 }}>\n                <button \n                  className={`d-block mx-auto btn btn-red font-montserrat shadow-sm`} \n                  style={{ minWidth: 100 }} \n                  onClick={() => setDeletedUserId(null)}\n                >Cancel</button>\n\n                <button \n                  className={`d-block mx-auto btn btn-green font-montserrat shadow-sm`} \n                  style={{ minWidth: 100 }} \n                  onClick={deleteUser}\n                >Confirm</button>\n              </div> \n            </React.Fragment>\n          }\n\n          showCloseButton={true}                          \n          closeButtonFunction={() => setDeletedUserId(null)} \n        />\n      );\n    }\n\n    if (users.length > 0 && filteredUsers.length === 0 && hasMounted.current === true){ \n      // One could pass in function so that button resets filters, unmounting <Alert />.\n      return (\n        <Alert \n          color=\"red\"                   \n          className=\"border-2 shadow\" \n          style={{ position: 'relative', top: 25, transform: 'translateX(-50%)' }}                   \n          headerContent={            \n            <h4 className=\"alert-heading mb-3 font-montserrat\">\n              <svg fill=\"currentColor\" viewBox=\"0 0 16 16\" style={{ maxWidth: 28, verticalAlign: 'top' }}>\n                <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\n              </svg>\n              Whoops!\n            </h4>\n          }\n          bodyContent={<p className=\"my-4 font-montserrat text-center\">It looks like there are no users based on that criteria.</p>}\n          showCloseButton={false}                      \n        />\n      );\n    }\n\n    return null;\n  };\n\n\n  /* ========================\n            return\n  ======================== */\n\n\n  return (\n    <React.Fragment>\n      <Filter users={users} setFilteredUsers={setFilteredUsers} />\n      { renderTable() }\n      { renderAlert() } \n    </React.Fragment>\n  );\n};\n\n\nexport default UserTable;\n\n\n\n\n\n\n","import React                   from 'react'; \nimport { RouteComponentProps } from 'react-router-dom';\nimport { MainContextValue }    from '../../../interfaces';\nimport UserTable               from './UserTable';\n\n\ninterface AdminPageProps extends RouteComponentProps {\n  value: MainContextValue;\n}\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\nexport function AdminPage(props: AdminPageProps): React.ReactElement | null {\n  const { value }           = props;\n  const { users, setUsers } = value;\n\n  return (\n    <div className=\"flex-grow-1\" style={{ backgroundColor: 'rgba(72, 74, 99, 0.1)'}}>\n      <div className=\"container-fluid pt-5 px-md-5\">\n        <h2 className=\"mb-5 text-white-3d text-center\">Admin</h2>\n        <UserTable users={users} setUsers={setUsers} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\n\ninterface FeedbackProps {\n  error:      string;\n  className?: string;\n  style?:     React.CSSProperties;\n}\n\n\nexport const Feedback = ({ \n  error     = '', \n  className = '', \n  style     = {} }: FeedbackProps): React.ReactElement | null  => {\n  const defaultClassName = 'mt-1 text-end';\n\n  return (\n    <div \n      className={`invalid-feedback${className ? ` ${className}` : ` ${defaultClassName}`}`}\n      style={style}\n    >{error}</div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { useMainContext }             from '../../../MainContext';\nimport { User }                       from '../../../interfaces';\nimport { dateObjectToSqlTimestamp }   from '../../../helpers/date-helpers';\nimport { Feedback }                   from './Feedback';\nimport { Alert, Icon }                from '../../shared'; \n\n\ninterface CreateUserFormProps {\n  users:    User[];\n  setUsers: React.Dispatch<React.SetStateAction<User[]>>;\n}\n\ninterface ObjectWithMessage {\n  message: string;\n}\n\ninterface MutationResponse {\n  data?:      ObjectWithMessage;\n  error?:     ObjectWithMessage;\n  status:     number;\n  statusText: string;\n}\n\n\n//! Duplicate\nfunction hasCorrectFormat(value: string, regex: RegExp){\n  if (!regex.test(value)){ return false; }\n  return true;\n}\n\n\n/* ==========================================================================\n\n========================================================================== */\n\n\nexport const CreateUserForm = ({ users, setUsers }: CreateUserFormProps) => {\n  const { districts }                                     = useMainContext();\n  const [ firstName,        setFirstName ]                = useState('');\n  const [ firstNameError,   setFirstNameError ]           = useState('');\n  const [ firstNameTouched, setFirstNameTouched ]         = useState(false);\n\n  const [ lastName,        setLastName ]                  = useState('');\n  const [ lastNameError,   setLastNameError ]             = useState('');\n  const [ lastNameTouched, setLastNameTouched ]           = useState(false);\n\n  const [ middleInitial,        setMiddleInitial ]        = useState('');\n  const [ middleInitialError,   setMiddleInitialError ]   = useState('');\n  const [ middleInitialTouched, setMiddleInitialTouched ] = useState(false);\n\n  const [ email,        setEmail ]                        = useState('');\n  const [ emailError,   setEmailError ]                   = useState('');\n  const [ emailTouched, setEmailTouched ]                 = useState(false);\n\n  // Radios do not need a touched state.\n  const [ active,      setActive]                         = useState('');\n  const [ activeError, setActiveError ]                   = useState('');\n\n  // <select>s do not need a touched state.\n  const [ district,        setDistrict ]                  = useState('');\n  const [ districtError,   setDistrictError ]             = useState('');\n  const [ districtOptions, setDistrictOptions]            = useState<React.ReactNode | null>(null);\n\n\n  // This state is used to track the API request when sending newUser to a server.\n  // Obviously, we're not doing that here, but its still good to build it out.\n  const [ loading,   setLoading ]   = useState(false); \n  const [ data,      setData ]      = useState<ObjectWithMessage | null>(null); \n  const [ error,     setError ]     = useState<ObjectWithMessage | null>(null); \n  const [ isSuccess, setIsSuccess ] = useState(false); \n  const [ isError,   setIsError ]   = useState(false); \n  \n\n  /* ===========================\n\n  =========================== */\n\n \n  function validateFirstName(e: React.ChangeEvent<HTMLInputElement> | undefined){\n    const value = (e && e.target) ? e.target.value : firstName; \n\n    if (value.length === 0){\n      setFirstNameError('First name is required!');\n      return false; \n    } \n\n    if (!hasCorrectFormat(value, /^[a-zA-Z]*$/)){\n      setFirstNameError('First name must be only letters!');\n      return false;\n    }\n\n    setFirstNameError('');\n    return true;\n  }\n\n\n  /* ===========================\n\n  =========================== */\n\n\n  function validateLastName(e: React.ChangeEvent<HTMLInputElement> | undefined){\n    const value = (e && e.target) ? e.target.value : lastName; \n\n    if (value.length === 0){\n      setLastNameError('Last name is required!');\n      return false; \n    } \n\n    if (!hasCorrectFormat(value, /^[a-zA-Z]*$/)){\n      setLastNameError('Last name must be only letters!');\n      return false;\n    }\n\n    setLastNameError('');\n    return true;\n  }\n\n\n  /* ===========================\n\n  =========================== */\n\n\n  function validateMiddleInitial(e: React.ChangeEvent<HTMLInputElement> | undefined){\n    const value = (e && e.target) ? e.target.value : middleInitial; \n\n    if (value.length > 1){\n      setMiddleInitialError('Middle initial must be only one letter!');\n      return false; \n    } \n\n    if (value.length === 1 && !hasCorrectFormat(value, /^[a-zA-Z]$/)){\n      setMiddleInitialError('Middle initial must be a letter!');\n      return false;\n    }\n\n    setMiddleInitialError('');\n    return true;\n  }\n\n\n  /* ============================\n\n  ============================ */\n\n\n  function validateEmail(e: React.ChangeEvent<HTMLInputElement> | undefined){\n    const value = (e && e.target) ? e.target.value : email;\n\n    if (value.length === 0){\n      setEmailError('Email required!');\n      return false; \n    } \n\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email\n    const regex   = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/; // eslint-disable-line\n    const isEmail = hasCorrectFormat(value, regex);\n\n    if (!isEmail){\n      setEmailError('Must be an email!');\n      return false; \n    } \n\n    setEmailError('');\n    return true;\n  }\n\n\n  /* ============================\n\n  ============================ */\n\n\n  function validateActive(e: React.ChangeEvent<HTMLInputElement> | undefined){\n    const value = (e && e.target) ? e.target.value : active; \n\n    if (value.length === 0){\n      setActiveError('Active required!');\n      return false; \n    } \n\n    setActiveError('');\n    return true;\n  }\n\n\n  /* ============================\n\n  ============================ */\n\n\n  function validateDistrict(e: React.ChangeEvent<HTMLSelectElement> | undefined){\n    const value = (e && e.target) ? e.target.value : district; \n\n    if (value.length === 0){\n      setDistrictError('District is required!');\n      return false; \n    } \n\n    setDistrictError('');\n    return true;\n  }\n\n\n  /* ============================\n\n  ============================ */\n\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault(); // Not actually necessary since using type=\"button\"/onClick\n    let formIsValid  = true;\n    const validators = [\n      validateFirstName, \n      validateLastName, \n      validateMiddleInitial, \n      validateEmail,\n      validateActive, \n      validateDistrict\n    ];\n\n\n    // Validate fields...\n    for (let i = 0; i < validators.length; i++){\n      const validator = validators[i];\n      const isValid   = validator(undefined); // eslint-disable-line\n      if (!isValid){ formIsValid = false; }\n    }\n\n\n    if (formIsValid){  \n      // Technically, CreateUserForm doesn't need to know about users.\n      // However, for this demo I've decided to set the newUser.id to\n      // users[users.length-1].id + 1. I could've gone with uuid, but this also works.\n      // The next 3 lines are being used to fake the successful response data.\n      // Normally, there would be no need to store them in constants.\n      const id    = users[users.length-1].id + 1;\n      const fName = firstName;\n      const lName = lastName;\n\n    \n      const newUser:User = {\n        id:             id,\n        first_name:     firstName,\n        last_name:      lastName,\n        middle_initial: middleInitial ? middleInitial : null,\n        email:          email,\n        active:         active === 'true' ? true : false,\n        district:       parseInt(district, 10),\n        verified:       false,                              \n        created_at:     dateObjectToSqlTimestamp(new Date()) // Seems like this should be done on the server... \n      };                                                     \n\n\n      // Make an API request to update users on the server.\n      setLoading(true);\n      setError(null);\n      setIsError(false);\n\n\n      try {\n        // Artificial delay to test button spinner\n        await new Promise((resolveFx, rejectFx) => setTimeout(resolveFx, 1500)); \n\n\n        const mutationResponse: MutationResponse = await new Promise((resolveFx, rejectFx) => {\n          resolveFx({ // Pretend the API is responding with name and id.\n            data: { message: `${fName} ${lName} was created with an id of ${id}.` }, \n            status: 200,\n            statusText: \"OK\"\n          });\n        });\n\n\n        //# Comment above mutationResponse and uncomment this to mock failed request.\n        // const mutationResponse: MutationResponse = await new Promise((resolveFx, rejectFx) => {\n        //   resolveFx({ \n        //     error: { message: \"Unable to create new user.\" }, \n        //     status: 400,\n        //     statusText: \"Bad Request\"\n        //   });\n        // });\n        // // In practice, a bad request would automatically get sent to catch block,\n        // // but in this demo we have to force it.\n        // if (mutationResponse.error){ throw mutationResponse; }\n        \n\n        // Update request state.\n        // In this demo when isSuccess && data (e.g. mutation response data),\n        // then an <Alert /> is conditionally rendered which indicates success.\n        // Upon closing that <Alert /> isSuccess is set to false, and data back to null.\n        // In other words, setting that state closes the success <Alert />\n\n\n        setLoading(false);\n        setIsSuccess(true);\n        if (mutationResponse.data){ setData(mutationResponse.data); }\n\n\n        // Reset form\n        setFirstName('');\n        setLastName('');\n        setMiddleInitial('');\n        setEmail('');\n        setActive(''); \n        setDistrict('');\n\n\n        // Untouch some input fields (not type=\"checkbox\", type=\"radio\", type=\"file\").\n        setFirstNameTouched(false);\n        setLastNameTouched(false);\n        setMiddleInitialTouched(false);\n        setEmailTouched(false);\n\n\n        // At this point the users 'cached' in global state will be out of sync;\n        // A new request must be made for the updated users.\n        // Since we're not actually interacting with an API, we will\n        // optimistically update here, and skip the API part.\n        setUsers(currentUsers => [...currentUsers, newUser]);\n      } \n      \n      catch (err){\n        setLoading(false);\n        if (err.error){\n          setIsError(true);\n          setError(err.error);\n        }        \n      } \n    } \n    \n    \n    // Otherwise, if the form is NOT valid...\n    else {\n      // Touch some input fields (not type=\"checkbox\", type=\"radio\", type=\"file\"):\n      setFirstNameTouched(true);\n      setLastNameTouched(true);\n      setMiddleInitialTouched(true);\n      setEmailTouched(true);\n    }\n  }\n\n\n  /* ============================\n\n  ============================ */\n\n\n  useEffect(() => {\n    const districtOptions = districts.map(district => <option key={district.id} value={district.id}>{district.name}</option>) \n    setDistrictOptions(districtOptions);\n  }, [districts]);\n\n\n  /* ============================\n      renderSubmitButton()\n  ============================ */\n\n\n  const renderSubmitButton = () =>{\n    if (loading){\n      return (\n        <button className=\"d-block w-100 btn btn-green font-montserrat\" type=\"button\" disabled>\n          <span className=\"spinner-border spinner-border-sm me-3\" role=\"status\" aria-hidden=\"true\"></span>\n          Submitting...\n        </button>\n      );\n    }\n\n    return (\n      <button \n        className=\"d-block w-100 btn btn-green font-montserrat\" \n        type=\"button\"\n        onClick={handleSubmit}\n      >Submit</button>\n    );\n  };\n\n\n  /* ============================\n           renderAlert()\n  ============================ */\n  // Render success alert when user is successfully uploaded.\n  // Render failure alert when user is not successfully uploaded.\n\n\n  const renderAlert = () => { \n    if (isError && error){ // Check both of these just in case the state updates aren't simultaneously batched. \n      return (\n        <Alert \n          color=\"red\"               \n          className=\"border-2 shadow\" \n          style={{}}            \n          headerContent={             \n            <h4 className=\"alert-heading mb-3 font-montserrat\">\n              <Icon name=\"exclamation-triangle-fill\" size={28} />\n              Whoops!\n            </h4>\n          }\n          bodyContent={ \n            <React.Fragment>\n              <p className=\"font-montserrat\">{ error.message ? error.message : 'Could not create new user.'}</p>\n              <button \n                className={`d-block mx-auto btn btn-red font-montserrat shadow-sm`} \n                style={{ minWidth: 100 }} \n                onClick={() => {\n                  setError(null);\n                  setIsError(false);\n                }}\n              >Close</button>\n            </React.Fragment>\n          }\n\n          showCloseButton={true}                    \n          closeButtonFunction={() => {\n            setError(null);\n            setIsError(false);\n          }} \n        />\n      );\n    }\n\n\n    if (isSuccess && data){ // Check both of these just in case the state updates aren't simultaneously batched. (???)\n      return (\n        <Alert \n          color=\"green\"              \n          className=\"border-2 shadow\" \n          style={{}}               \n          headerContent={          \n            <h4 className=\"alert-heading mb-3 font-montserrat\">\n              <Icon name=\"check-circle-fill\" size={28} style={{ marginRight: 5 }} />\n              Success!\n            </h4>\n          }\n          bodyContent={ \n            <React.Fragment>\n              <p className=\"font-montserrat\">{ data.message ? data.message : 'The user has been created.'}</p>\n              <button \n                className={`d-block mx-auto btn btn-green font-montserrat shadow-sm`} \n                style={{ minWidth: 100 }} \n                onClick={() => {\n                  setData(null);\n                  setIsSuccess(false);\n                }}\n              >Close</button>\n            </React.Fragment>\n          }\n\n          showCloseButton={true}                    \n          closeButtonFunction={() => {\n            setData(null);\n            setIsSuccess(false);\n          }} \n        />\n      );\n    }\n\n    return null;\n  };\n\n\n  /* ============================\n\n  ============================ */\n\n\n  return (\n    <React.Fragment>\n      <form \n        className=\"mx-auto mb-5 p-3 bg-light border border-green border-2 rounded-3 shadow\" \n        style={{ maxWidth: 700 }}\n        autoComplete=\"off\"\n        noValidate\n      >\n        <div className=\"mb-3\">\n          <label className=\"mb-2 font-montserrat text-green\" htmlFor=\"first-name\">First Name:<sup className=\"text-pink\"> *</sup></label>\n          <input \n            // This will still not work if id=\"name\". The real solution is to change the id.\n            // autoComplete=\"turn-off-for-real\" \n            id=\"first-name\"\n            className={`form-control${firstNameError ? ' is-invalid' : ''}`}\n            autoComplete=\"turn-off-for-real\"\n            type=\"text\" \n            placeholder=\"First name...\" \n            value={firstName}\n            onChange={(e) => {\n              setFirstName(e.target.value);\n              if (firstNameTouched){ validateFirstName(e); }\n            }}\n            onBlur={(e) => {\n              if (!firstNameTouched){ validateFirstName(e); }\n              setFirstNameTouched(true);\n            }}\n          />\n          <Feedback error={firstNameError} />\n        </div>\n\n\n        {/* ======================= */}\n\n\n        <div className=\"mb-3\">\n          <label className=\"mb-2 font-montserrat text-green\" htmlFor=\"last-name\">Last Name:<sup className=\"text-pink\"> *</sup></label>\n          <input \n            id=\"last-name\"\n            className={`form-control${lastNameError ? ' is-invalid' : ''}`}\n            autoComplete=\"turn-off-for-real\"\n            type=\"text\" \n            placeholder=\"Last name...\" \n            value={lastName}\n            onChange={(e) => {\n              setLastName(e.target.value);\n              if (lastNameTouched){ validateLastName(e); }\n            }}\n            onBlur={(e) => {\n              if (!lastNameTouched){ validateLastName(e); }\n              setLastNameTouched(true);\n            }}\n          />\n          <Feedback error={lastNameError} />\n        </div>\n\n\n        {/* ======================= */}\n\n\n        <div className=\"mb-3\">\n          <label className=\"mb-2 font-montserrat text-green\" htmlFor=\"middle-initial\">Middle Initial:</label>\n          <input \n            id=\"middle-initial\"\n            className={`form-control${middleInitialError ? ' is-invalid' : ''}`}\n            autoComplete=\"turn-off-for-real\"\n            type=\"text\" \n            placeholder=\"Middle Initial...\" \n            value={middleInitial}\n            onChange={(e) => {\n              setMiddleInitial(e.target.value);\n              if (middleInitialTouched){ validateMiddleInitial(e); }\n            }}\n            onBlur={(e) => {\n              if (!middleInitialTouched){ validateMiddleInitial(e); }\n              setMiddleInitialTouched(true);\n            }}\n          />\n          <Feedback error={middleInitialError} />\n        </div>\n\n\n        {/* ======================= */}\n\n        \n        <div className=\"mb-3\">\n          <label className=\"mb-2 font-montserrat text-green\" htmlFor=\"e-mail\">Email:<sup className=\"text-pink\"> *</sup></label>\n\n          <input \n            // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n            // Even though autoComplete=\"off\" was set on the form, Chrome will read the value of the label, id, and/or name attribute.\n            // name attribute values like \"address\", 'email', 'name' - will be autocompleted.\n            // This will NOT work if id=\"email\"\n            autoComplete=\"turn-off-for-real\"\n            id=\"e-mail\"\n            className={`form-control${emailError ? ' is-invalid' : ''}`}\n            type=\"email\" \n            placeholder=\"Email...\" \n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              if (emailTouched){ validateEmail(e); }\n            }}\n            onBlur={(e) => {\n              if (!emailTouched){ validateEmail(e); }\n              setEmailTouched(true);\n            }}\n          />\n\n          <Feedback error={emailError} />\n        </div>\n\n\n        {/* ======================= */}\n\n\n        <div className=\"mb-3\">\n          <label className=\"mb-2 font-montserrat text-green\">Active Status:<sup className=\"text-pink\"> *</sup></label>\n        \n          <div className=\"form-check\"> \n            <input \n              id=\"active-1\"  \n              className={`form-check-input${activeError ? ' is-invalid' : ''}`} \n              type=\"radio\" \n              value=\"true\" \n              name=\"active\" \n              onChange={(e) => { \n                setActive(e.target.value); \n                validateActive(e);\n              }}\n              checked={active === \"true\"}\n            /> \n\n            <label htmlFor=\"active-1\" className={`form-check-label${activeError ? ' text-red' : ''}`}>True</label>\n          </div>\n          \n\n          <div className=\"form-check\"> \n            <input \n              id=\"active-2\"  \n              className={`form-check-input${activeError ? ' is-invalid' : ''}`} \n              type=\"radio\" \n              value=\"false\" \n              name=\"active\" \n              onChange={(e) => { \n                setActive(e.target.value); \n                validateActive(e);\n              }}\n              checked={active === \"false\"}\n            /> \n            <label htmlFor=\"active-2\" className={`form-check-label${activeError ? ' text-red' : ''}`}>False</label>\n\n            <Feedback error={activeError} />\n          </div>    \n        </div>\n\n\n        {/* ======================= */}\n\n\n        <div className=\"mb-3\">\n          <label className=\"mb-2 font-montserrat text-green\" htmlFor=\"district\">District:<sup className=\"text-pink\"> *</sup></label>\n          <select \n            id=\"district\"\n            className={\n              `form-select${district === \"\" ? ' text-gray' : ''}${districtError ? ' is-invalid' : ''}`\n            }\n            value={district}\n            onChange={(e) => {\n              setDistrict(e.target.value);\n              validateDistrict(e);\n            }}\n            onBlur={(e) => validateDistrict(e) }\n          >\n            <option value=\"\">Select District</option>\n            { districtOptions }\n          </select>\n\n          <Feedback error={districtError} />\n        </div>\n\n\n        {/* ======================= */}\n\n\n        { renderSubmitButton() }  \n      </form>\n\n      { renderAlert() }\n    </React.Fragment>\n  );\n};\n\n","import React                   from 'react'; \nimport { RouteComponentProps } from 'react-router-dom';\nimport { MainContextValue }    from '../../../interfaces';\nimport { CreateUserForm }      from './CreateUserForm';\n\n\ninterface CreateUserPageProps extends RouteComponentProps  {\n  value: MainContextValue;\n}\n\n\n/* ========================================================================\n\n======================================================================== */\n\n\nexport function CreateUserPage(props: CreateUserPageProps): React.ReactElement | null {\n  const { value }           = props;\n  const { users, setUsers } = value;\n\n  return (\n    <div className=\"flex-grow-1\">\n      <div className=\"container-fluid pt-5 px-md-5\">\n        <h2 className=\"mb-5 text-white-3d text-center\">Create User</h2>\n\n        <CreateUserForm users={users} setUsers={setUsers} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react'; \n\n\nconst NotFoundPage = () => {\n  return (\n    <div className=\"flex-grow-1\">\n      <div className=\"container-fluid pt-5 px-md-5\">\n        <h1 \n          className=\"mb-5 text-center\" \n          style={{ \n            color: '#FF355E', \n            fontFamily: 'Creepster', \n            fontSize: 64, \n            textShadow: '0px 2px 4px rgba(0,0,0,0.5)' \n          }}\n        >Not Found!!!</h1>\n\n\n        <div className=\"horizontal-ruler red\">\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n          <hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/><hr/>\n        </div>\n      </div>\n\n\n      <div className=\"mx-auto\" style={{ width: '40%' }}>\n        <svg \n          style={{ margin: '0 auto', width: '100%', filter: 'drop-shadow(0px 2px 4px rgba(0,0,0,0.5))' }}\n          viewBox=\"0 0 512 512\" \n          fill=\"#FF355E\"\n        >\n          <path d=\"M296.606,364.393l-29.999-30c-5.857-5.858-15.355-5.858-21.213,0l-30,30C205.985,373.801,212.646,390,226,390H286\n          C299.304,390,306.05,373.836,296.606,364.393z\"/>\n        \n          <path d=\"M165.999,179.997c-41.355,0-75.001,33.645-75.001,75.001c0,41.355,33.645,75.001,75.001,75.001S241,296.354,241,254.997\n          C241,213.642,207.354,179.997,165.999,179.997z M165.999,300.198c-24.813,0-45.2-20.387-45.2-45.2s20.387-45.2,45.2-45.2\n          s45.2,20.387,45.2,45.2S190.812,300.198,165.999,300.198z\"/>\n          \n          <path d=\"M346.001,179.997c-41.355,0-75.001,33.645-75.001,75.001c0,41.355,33.645,75.001,75.001,75.001\n          c41.355,0,75.001-33.645,75.001-75.001S387.356,179.997,346.001,179.997z M346.001,300.198c-24.813,0-45.2-20.387-45.2-45.2\n          s20.387-45.2,45.2-45.2s45.201,20.387,45.201,45.2S370.814,300.198,346.001,300.198z\"/>\n          \n          <path d=\"M476.108,270.988c15.607-74.732-7.02-151.096-61.007-205.086v-0.001C372.602,23.404,316.099,0,256,0\n          C195.901,0,139.398,23.404,96.898,65.902c-53.869,53.87-76.716,130.182-61.007,205.091c-6.143,17.917-6.485,37.065-0.951,55.682\n          c9.404,31.617,35.56,54.97,68.461,61.251c3.795,1.08,4.018,0.017,11.46,1.242c2.047,0.337,4.001,0.621,6.139,0.763L121,447.954\n          c0,18.193,10.705,34.432,27.272,41.369c24.699,10.343,63.434,22.671,107.706,22.675c0.008,0,0.015,0.001,0.023,0.001\n          c0.008,0,0.016-0.001,0.023-0.001c44.269-0.004,83.006-12.333,107.709-22.676c16.565-6.938,27.269-23.176,27.269-41.367v-58.095\n          c2.077-0.139,4.014-0.403,6.046-0.714c7.929-1.213,8.245-0.09,12.239-1.437c32.914-6.607,58.868-30.138,68.004-61.833\n          C482.584,307.52,482.162,288.646,476.108,270.988z M448.465,317.568c-6.117,21.222-23.856,36.907-46.311,40.962\n          c-12.258,0.374-10.552,2.829-23.167,0.267c-9.289-1.887-17.985,5.224-17.985,14.7v74.458c0,6.066-3.477,11.442-8.856,13.696\n          c-5.484,2.296-12.864,4.862-21.343,7.605v-32.457c0-8.284-6.516-14.8-14.8-14.8c-8.284,0-15,6.716-15,15v40.324\n          c-9.389,1.89-19.669,3.176-30.2,3.93V436.8c0-8.284-6.516-14.8-14.8-14.8c-8.284,0-15,6.716-15,15v44.453\n          c-10.531-0.753-20.811-2.44-30.2-4.329V436.8c0-8.284-6.516-14.8-14.8-14.8s-15,6.716-15,15v32.457\n          c-8.478-2.743-15.658-5.509-21.141-7.805c-5.382-2.254-9.059-7.83-9.059-13.897l0.002-74.45c0-9.462-8.482-16.39-17.784-14.501\n          c-13.377,2.716-10.435,0.035-23.659-0.285c-21.986-4.08-39.448-19.506-45.661-40.396c-4.049-13.621-3.459-27.605,1.707-40.441\n          c1.144-2.843,1.39-5.968,0.705-8.954c-15.458-67.379,5.15-134.755,52.005-181.612C154.945,50.284,203.914,29.8,256,29.8\n          s101.055,20.483,137.887,57.314c47.708,47.711,67.151,115.603,52.006,181.611c-0.685,2.987-0.439,6.112,0.705,8.954\n          C451.693,290.339,452.338,304.132,448.465,317.568z\"/>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\n\nexport default NotFoundPage;","import React                from 'react';\nimport { MainContextValue } from '../../interfaces';\nimport { Route, Switch }    from 'react-router-dom';\nimport { HomePage }         from '../pages/HomePage';\nimport { AdminPage }        from '../pages/AdminPage';\nimport { CreateUserPage }   from '../pages/CreateUserPage';\nimport NotFoundPage         from '../pages/NotFoundPage';\n\n\ninterface RouterProps {\n  value: MainContextValue;\n}\n\n\nexport function Router({ value }: RouterProps){\n  return (\n    <Switch>  \n      <Route \n        exact path=\"/\"\n        render={(props) => {\n          return <HomePage {...props} value={value} />;\n        }}\n      />\n\n      <Route \n        exact path=\"/admin\"\n        render={(props) => {\n          return <AdminPage {...props} value={value} />;\n        }}\n      />\n\n      <Route \n        exact path=\"/createuser\"\n        render={(props) => {\n          return <CreateUserPage {...props} value={value} />;\n        }}\n      />\n\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n}\n\n\n\n","import React             from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\n\ninterface NavbarProps {\n  brand?: string;\n}\n\n\nconst Navbar = ({ brand = \"inquirED\" }: NavbarProps) => {\n  const toggleCollapse = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    const CLASS_SHOW       = 'show';\n    const CLASS_COLLAPSE   = 'collapse';\n    const CLASS_COLLAPSING = 'collapsing';\n    const CLASS_COLLAPSED  = 'collapsed';\n    const ANIMATION_TIME   = 350; // 0.35s\n    const el               = e.currentTarget;\n    const collapseTargetId = el.dataset.target || null; // Originally was: el.dataset.target || el.href || null;\n\n\n    if (collapseTargetId){\n      const targetEl = document.querySelector(collapseTargetId) as HTMLElement;\n      const isShown  = targetEl.classList.contains(CLASS_SHOW) || targetEl.classList.contains(CLASS_COLLAPSING);\n\n      if (!isShown){\n        targetEl.classList.remove(CLASS_COLLAPSE);\n        targetEl.classList.add(CLASS_COLLAPSING);\n        targetEl.style.height = '0';\n        targetEl.classList.remove(CLASS_COLLAPSED);\n\n        setTimeout(\n          () => {\n            targetEl.classList.remove(CLASS_COLLAPSING);\n            targetEl.classList.add(CLASS_COLLAPSE, CLASS_SHOW);\n            targetEl.style.height = '';\n          }, ANIMATION_TIME\n        );\n\n        targetEl.style.height = `${targetEl.scrollHeight}px`;\n      } else {\n        targetEl.style.height = `${targetEl.getBoundingClientRect().height}px`;\n        // Force reflow...\n        const obligatoryAssignment = targetEl.offsetHeight; // eslint-disable-line\n\n        targetEl.classList.add(CLASS_COLLAPSING);\n        targetEl.classList.remove(CLASS_COLLAPSE, CLASS_SHOW);\n        targetEl.style.height = '';\n\n        setTimeout(() => {\n          targetEl.classList.remove(CLASS_COLLAPSING);\n          targetEl.classList.add(CLASS_COLLAPSE);\n        }, ANIMATION_TIME);\n      }\n    }\n  }; // End of toggleCollapse()\n\n\n  return (\n    <nav id=\"primary-navbar\" className=\"navbar navbar-expand-md navbar-dark\">\n      <div className=\"container-fluid\">\n        <Link id=\"brand\" className=\"navbar-brand font-montserrat\" to=\"/\">{brand}</Link>\n\n        <button\n          id=\"custom-toggler\"\n          className=\"navbar-toggler custom-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"         // Bootstrap 5 uses data-bs-toggle\n          data-target=\"#navbar-collapse\" // Bootstrap 5 uses data-bs-target\n          onClick={toggleCollapse}\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n\n        <div id=\"navbar-collapse\" className=\"collapse navbar-collapse\">\n          <div className=\"navbar-nav ms-auto\">\n            <NavLink className=\"nav-link\" activeClassName=\"active-link\" exact to=\"/admin\">Admin</NavLink>\n            <NavLink className=\"nav-link\" activeClassName=\"active-link\" exact to=\"/createuser\">Create User</NavLink>\n          </div>\n        </div>{/* End of <div className collapse navbar-collapse\"> */}\n      </div>{/* End of <div className=\"container-fluid\"> */}\n    </nav>\n  );\n}\n\n\nexport default Navbar;\n","import React               from 'react';\nimport { useMainContext  } from './MainContext';\nimport { HashRouter }      from 'react-router-dom'; // HashRouter generally works better for GitHub, but normally use BrowserRouter.\nimport { Router }          from './components/navigation/Router';\nimport Navbar              from './components/navigation/Navbar';\nimport './scss/bootstrap/bootstrap-icons.css';\nimport './scss/bootstrap/custom-bootstrap.scss';\nimport './scss/App.scss';\n\n\nfunction App(){\n  const value = useMainContext();\n\n  return (\n    <HashRouter>\n      <header><Navbar /></header>\n      <main><Router value={value} /></main>\n    </HashRouter>\n  );\n}\n\n\nexport default App;\n","import React            from 'react';\nimport ReactDOM         from 'react-dom';\nimport { MainProvider } from './MainContext';\nimport App              from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainProvider><App /></MainProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}