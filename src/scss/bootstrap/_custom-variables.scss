////////////////////////////////////////////////////////////////////////////////
//
//  You will find the complete list of Bootstrap’s variables in scss/_variables.scss. 
//  Some variables are set to null, these variables don’t output the property unless 
//  they are overridden in your configuration.
//
//  Every Sass variable in Bootstrap includes the !default flag allowing you to override 
//  the variable’s default value in your own Sass without modifying Bootstrap’s source code. 
//  Copy and paste variables as needed, modify their values, and REMOVE the !default flag. 
//  If a variable has already been assigned, then it won’t be re-assigned by the default 
//  values in Bootstrap.
//
//  Variables should follow the `$component-state-property-size` formula for
//  consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.
//
////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////
//
//                              Color System
//
////////////////////////////////////////////////////////////////////////////////


// scss-docs-start gray-color-variables
$white:    #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-600: #6c757d !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black:    #000 !default;
// scss-docs-end gray-color-variables

// fusv-disable
// scss-docs-start gray-colors-map
$grays: (
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900
) !default;
// scss-docs-end gray-colors-map
// fusv-enable


// scss-docs-start color-variables
// $blue:    #0d6efd !default;
// $indigo:  #6610f2 !default;
// $purple:  #6f42c1 !default;
// $pink:    #d63384 !default;
// $red:     #dc3545 !default;
// $orange:  #fd7e14 !default;
// $yellow:  #ffc107 !default;
// $green:   #198754 !default;
// $teal:    #20c997 !default;
// $cyan:    #0dcaf0 !default;


// $red:     #EB366E; // Pinkish red;
// $red:     #DB2828; // More of a normal red;
// $red: 	   #FF355E; // Crayola Radical Red
// $red:     #800000; // maroon
// $red:        #B90000; // [light] maroon
$red:        #DB7093; // PaleVioletRed
$orange:     #FF6037;   // Crayola W3 Outrageous Orange
//$orange:     #F2711C; // More of a normal orange
$yellow:     #FFD700;
$olive:      #B5CC18;
//$green:      #32CD32; //Bright Green
$green:      #7E9682;  
$teal:       #00B5AD;
$light-cyan: #61DAFB; // React Blue
$cyan:       #0dcaf0;
// $blue:    #2185D0;
$blue:       #4682B4; // SteelBlue;

$violet:     #EE82EE;
//$pink:       #E03997; // Normal Pink
$pink:       #FF1493; // Bright Pink
$purple:     #A333C8;
$indigo:     #6610f2;

$brown:      #A5673F;
$gray:       #767676;
// scss-docs-end color-variables


////////////////////////////////////////////////////////////////////////////////
//
//  Here I am overwriting the colors map.
//  It seems that this map is used to add custom CSS variables at the top of the
//  .css file. However, the $theme-colors map is also used for this. Thus I
//  would only add a value here if there's some color you want, but it's not
//  a theme color.
//
////////////////////////////////////////////////////////////////////////////////


// scss-docs-start colors-map
$colors: (
  // "red":        $red,
  // "orange":     $orange,
  // "yellow":     $yellow,
  // "olive":       $olive,
  // "green":      $green,
  // "teal":       $teal,
  // "light-cyan": $light-cyan,
  // "cyan":       $cyan,
  // "blue":       $blue,

  // "violet":     $violet,
  // "pink":       $pink,
  // "purple":     $purple,
  // "indigo":     $indigo,

  // "brown":      $brown,
  // "white":      $white,
  // "gray":       $gray-600,
  // "gray-dark":  $gray-800,
  // "black":      $black
);
// scss-docs-end colors-map


////////////////////////////////////////////////////////////////////////////////
//
//  Define theme color variables.
//  These variables are not used in $theme-colors any more.
//  However, by default they are referenced within $table-variants below.
//  $danger and $success are also referenced in the form validation section.
//  Generally, I want to move away from using these types of names, but it doesn't
//  hurt to define them here just to avoid potential errors.
//
////////////////////////////////////////////////////////////////////////////////


// scss-docs-start theme-color-variables
$primary:       $blue;
$secondary:     $gray; // was $gray-600;
$success:       $green;
$info:          $cyan;
$warning:       $yellow;
$danger:        $red;
$light:         $gray-100;
$dark:          $gray-900;
// scss-docs-end theme-color-variables

// scss-docs-start theme-colors-map
$theme-colors: (
  //////////////////////////////////////////////////////////////////////////////
  //
  //  Even though I defined the theme colors above, I am omitting them here.
  //  Technically, this isn't how Bootstrap suggests removing colors:
  //  https://getbootstrap.com/docs/5.0/customize/sass/#remove-from-map
  //
  //  They also mention that some keys may be required:
  //  Bootstrap assumes the presence of some specific keys within Sass maps as we
  //  used and extend these ourselves. As you customize the included maps,
  //  you may encounter errors where a specific Sass map’s key is being used.
  //
  //  For example, we use the primary, success, and danger keys from $theme-colors
  //  for links, buttons, and form states. Replacing the values of these keys
  //  should present no issues, but removing them may cause Sass compilation issues.
  //  In these instances, you’ll need to modify the Sass code that makes use of those values.
  //
  //////////////////////////////////////////////////////////////////////////////

  // "primary":    $primary,
  // "secondary":  $secondary,
  // "success":    $success,
  // "info":       $info,
  // "warning":    $warning,
  // "danger":     $danger,
  // "light":      $light,
  // "dark":       $dark,

  "red":        $red,
  "orange":     $orange,
  "yellow":     $yellow,
  "olive":      $olive,
  "green":      $green,
  "teal":       $teal,
  "cyan":       $cyan,
  "blue":       $blue,
  "violet":     $violet,
  "pink":       $pink,
  "purple":     $purple,
  "indigo":     $indigo,
  "brown":      $brown,
  "gray":       $gray,
  "light":      $light, // It's better to use light and dark and not white and black.
  "dark":       $dark,  // That way there's a slight offset in color against similar backgrounds.
);
// scss-docs-end theme-colors-map


////////////////////////////////////////////////////////////////////////////////
//
//                          Other Color Settings
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//  The contrast ratio to reach against white, to determine if color changes from "light" to "dark".
//  Acceptable values for WCAG 2.0 are 3, 4.5 and 7.
//  See https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast
//
//
//  Some of the new theme colors are light enough to cause the buttons to render with dark text.
//  I changed $min-contrast-ratio to 2.0, but it still causes some to render with dark text.
//  Technically 1.5 is not WCAG acceptable, but oh well...
//
////////////////////////////////////////////////////////////////////////////////

// The contrast ratio to reach against white, to determine if color changes 
// from "light" to "dark". Acceptable values for WCAG 2.0 are 3, 4.5 and 7.
// See https://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast
$min-contrast-ratio:   1.5; // Was 4.5




// // Customize the light and dark text colors for use in our color contrast function.
// $color-contrast-dark:      $black !default;
// $color-contrast-light:     $white !default;


////////////////////////////////////////////////////////////////////////////////
//
//  In order to actually include these as custom variables in the generated CSS, 
//  you have to create a _custom-root.scss. 
//
////////////////////////////////////////////////////////////////////////////////

// // fusv-disable
$blue-100: tint-color($blue, 80%) !default;
$blue-200: tint-color($blue, 60%) !default;
$blue-300: tint-color($blue, 40%) !default;
$blue-400: tint-color($blue, 20%) !default;
$blue-500: $blue !default;
$blue-600: shade-color($blue, 20%) !default;
$blue-700: shade-color($blue, 40%) !default;
$blue-800: shade-color($blue, 60%) !default;
$blue-900: shade-color($blue, 80%) !default;

$indigo-100: tint-color($indigo, 80%) !default;
$indigo-200: tint-color($indigo, 60%) !default;
$indigo-300: tint-color($indigo, 40%) !default;
$indigo-400: tint-color($indigo, 20%) !default;
$indigo-500: $indigo !default;
$indigo-600: shade-color($indigo, 20%) !default;
$indigo-700: shade-color($indigo, 40%) !default;
$indigo-800: shade-color($indigo, 60%) !default;
$indigo-900: shade-color($indigo, 80%) !default;

$purple-100: tint-color($purple, 80%) !default;
$purple-200: tint-color($purple, 60%) !default;
$purple-300: tint-color($purple, 40%) !default;
$purple-400: tint-color($purple, 20%) !default;
$purple-500: $purple !default;
$purple-600: shade-color($purple, 20%) !default;
$purple-700: shade-color($purple, 40%) !default;
$purple-800: shade-color($purple, 60%) !default;
$purple-900: shade-color($purple, 80%) !default;

$pink-100: tint-color($pink, 80%) !default;
$pink-200: tint-color($pink, 60%) !default;
$pink-300: tint-color($pink, 40%) !default;
$pink-400: tint-color($pink, 20%) !default;
$pink-500: $pink !default;
$pink-600: shade-color($pink, 20%) !default;
$pink-700: shade-color($pink, 40%) !default;
$pink-800: shade-color($pink, 60%) !default;
$pink-900: shade-color($pink, 80%) !default;

$red-100: tint-color($red, 80%) !default;
$red-200: tint-color($red, 60%) !default;
$red-300: tint-color($red, 40%) !default;
$red-400: tint-color($red, 20%) !default;
$red-500: $red !default;
$red-600: shade-color($red, 20%) !default;
$red-700: shade-color($red, 40%) !default;
$red-800: shade-color($red, 60%) !default;
$red-900: shade-color($red, 80%) !default;

$orange-100: tint-color($orange, 80%) !default;
$orange-200: tint-color($orange, 60%) !default;
$orange-300: tint-color($orange, 40%) !default;
$orange-400: tint-color($orange, 20%) !default;
$orange-500: $orange !default;
$orange-600: shade-color($orange, 20%) !default;
$orange-700: shade-color($orange, 40%) !default;
$orange-800: shade-color($orange, 60%) !default;
$orange-900: shade-color($orange, 80%) !default;

$yellow-100: tint-color($yellow, 80%) !default;
$yellow-200: tint-color($yellow, 60%) !default;
$yellow-300: tint-color($yellow, 40%) !default;
$yellow-400: tint-color($yellow, 20%) !default;
$yellow-500: $yellow !default;
$yellow-600: shade-color($yellow, 20%) !default;
$yellow-700: shade-color($yellow, 40%) !default;
$yellow-800: shade-color($yellow, 60%) !default;
$yellow-900: shade-color($yellow, 80%) !default;

$green-100: tint-color($green, 80%) !default;
$green-200: tint-color($green, 60%) !default;
$green-300: tint-color($green, 40%) !default;
$green-400: tint-color($green, 20%) !default;
$green-500: $green !default;
$green-600: shade-color($green, 20%) !default;
$green-700: shade-color($green, 40%) !default;
$green-800: shade-color($green, 60%) !default;
$green-900: shade-color($green, 80%) !default;

$teal-100: tint-color($teal, 80%) !default;
$teal-200: tint-color($teal, 60%) !default;
$teal-300: tint-color($teal, 40%) !default;
$teal-400: tint-color($teal, 20%) !default;
$teal-500: $teal !default;
$teal-600: shade-color($teal, 20%) !default;
$teal-700: shade-color($teal, 40%) !default;
$teal-800: shade-color($teal, 60%) !default;
$teal-900: shade-color($teal, 80%) !default;

$cyan-100: tint-color($cyan, 80%) !default;
$cyan-200: tint-color($cyan, 60%) !default;
$cyan-300: tint-color($cyan, 40%) !default;
$cyan-400: tint-color($cyan, 20%) !default;
$cyan-500: $cyan !default;
$cyan-600: shade-color($cyan, 20%) !default;
$cyan-700: shade-color($cyan, 40%) !default;
$cyan-800: shade-color($cyan, 60%) !default;
$cyan-900: shade-color($cyan, 80%) !default;
// // fusv-enable

////////////////////////////////////////////////////////////////////////////////
//
//  $color-shades is custom. Any colors put in here will be added to the 
//  :root custom CSS properties. Why? Because _custom-root.scss doe this:
//  @each $color, $value in $extra-colors { --#{$variable-prefix}#{$color}: #{$value}; }
//
//  Additionally, within _custom-utilities.scss I created the following helper function:
//
//      @function map-join($maps...) {
//        $collection: ();
//        @each $map in $maps {
//          $collection: map-merge($collection, $map);
//        }
//        @return $collection;
//      }
//
//  I then used it to merge $extra-colors into the code that creates, .border-* classes, .text-* classes,
//  .bg-* classes. Other colored elements, like links, buttons, etc. are set outside of utilities.
//
////////////////////////////////////////////////////////////////////////////////
$extra-colors: (
  // "green-300": $green-300,
  // "green-400": $green-400,
  // "green-500": $green-500
);





////////////////////////////////////////////////////////////////////////////////
//
//        Characters which are escaped by the escape-svg function
//
////////////////////////////////////////////////////////////////////////////////

// $escaped-characters: (
//   ("<", "%3c"),
//   (">", "%3e"),
//   ("#", "%23"),
//   ("(", "%28"),
//   (")", "%29"),
// ) !default;


////////////////////////////////////////////////////////////////////////////////
//
//                             Options
//
////////////////////////////////////////////////////////////////////////////////
// Quickly modify global styling by enabling or disabling optional features.


// $enable-caret:                true !default;
// $enable-rounded:              true !default;
// $enable-shadows:              false !default;
// $enable-gradients:            false !default;
// $enable-transitions:          true !default;
// $enable-reduced-motion:       true !default;
// $enable-smooth-scroll:        true !default;
// $enable-grid-classes:         true !default;
// $enable-button-pointers:      true !default;
// $enable-rfs:                  true !default;
// $enable-validation-icons:     true !default;
// $enable-negative-margins:     false !default; // By default there are no longer negative margins. Set this to true if you want them.
// $enable-deprecation-messages: true !default;
// $enable-important-utilities:  true !default;


/////////////////////////////////////
//
//  Prefix for :root CSS variables
//
/////////////////////////////////////
// Prefix for :root CSS variables


// $variable-prefix: bs- !default;


/////////////////////////////////////
//
//           Gradient
//
/////////////////////////////////////
// The gradient which is added to components if `$enable-gradients` is `true`
// This gradient is also added to elements with `.bg-gradient`


// // scss-docs-start variable-gradient
// $gradient: linear-gradient(180deg, rgba($white, .15), rgba($white, 0)) !default;
// // scss-docs-end variable-gradient


/////////////////////////////////////
//
//          Spacing
//
/////////////////////////////////////
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

// // scss-docs-start spacer-variables-maps
// $spacer: 1rem !default;
// $spacers: (
//   0: 0,
//   1: $spacer / 4,
//   2: $spacer / 2,
//   3: $spacer,
//   4: $spacer * 1.5,
//   5: $spacer * 3,
//   // You can add more entries to the $spacers map, should you need more variation.
//   // That said it can add a lot of lines to the file.
//   // 6: $spacer * 4,
// ) !default;

// $negative-spacers: if($enable-negative-margins, negativify-map($spacers), null) !default;
// // scss-docs-end spacer-variables-maps


/////////////////////////////////////
//
//           Position
//
/////////////////////////////////////
// Define the edge positioning anchors of the position utilities.


// // scss-docs-start position-map
// $position-values: (
//   0: 0,
//   50: 50%,
//   100: 100%
// ) !default;
// // scss-docs-end position-map


/////////////////////////////////////
//
//           Body
//
/////////////////////////////////////
// Settings for the `<body>` element.


// $body-bg:                   $white !default;
// $body-color:                $gray-900 !default; //This is the default text color.
// $body-text-align:           null !default;


/////////////////////////////////////
//
//           Links
//
/////////////////////////////////////
// Style anchor elements.

$link-color:                              $blue;        // was: $primary !default; //! primary used here -this may need modification.
$link-decoration:                         none;         // was:  underline !default;
$link-shade-percentage:                   30% !default; // was: 20% !default; 

////////////////////////////////////////////////////////////////////////////////
//
//  shift-color() will only work if the imports in custom-boostrap.scss are defined in this order.
//
//    @import "../node_modules/bootstrap/scss/functions";
//    @import 'custom-variables';
//
////////////////////////////////////////////////////////////////////////////////
$link-hover-color: shift-color($link-color, $link-shade-percentage);
$link-hover-decoration:                   underline !default; // was: null !default
// $stretched-link-pseudo-element:           after !default;
// $stretched-link-z-index:                  1 !default;


/////////////////////////////////////
//
//          Paragraphs
//
/////////////////////////////////////
// Style p element.

$paragraph-margin-bottom:   25px; // was 1rem !default;


/////////////////////////////////////
//
//         Grid breakpoints
//
/////////////////////////////////////
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.


// // scss-docs-start grid-breakpoints
// $grid-breakpoints: (
//   xs: 0,
//   sm: 576px,
//   md: 768px,
//   lg: 992px,
//   xl: 1200px,
//   xxl: 1400px
// ) !default;
// // scss-docs-end grid-breakpoints

// @include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
// @include _assert-starts-at-zero($grid-breakpoints, "$grid-breakpoints");


/////////////////////////////////////
//
//         Grid Containers
//
/////////////////////////////////////
// Define the maximum width of `.container` for different screen sizes.


// // scss-docs-start container-max-widths
// $container-max-widths: (
//   sm: 540px,
//   md: 720px,
//   lg: 960px,
//   xl: 1140px,
//   xxl: 1320px
// ) !default;
// // scss-docs-end container-max-widths

// @include _assert-ascending($container-max-widths, "$container-max-widths");


/////////////////////////////////////
//
//         Grid Columns
//
/////////////////////////////////////
// Set the number of columns and specify the width of the gutters.


// $grid-columns:                12 !default;
// // $grid-gutter-width affects the horizontal margins of the .rows as well as
// // the horizontal padding of child columns. It is also responsible for setting
// // horizontal container padding.
// $grid-gutter-width:           1.5rem !default;
// $grid-row-columns:            6 !default;

// $gutters: $spacers !default;


/////////////////////////////////////
//
//      Container Padding
//
/////////////////////////////////////
// Suppose: we set $grid-gutter-width: 0px; (instead of 1.5rem).
// By default $container-padding-x is dependent on $grid-gutter-width.
// We could reset $container-padding-x to an equivalent value with to 0.75rem


// $container-padding-x: $grid-gutter-width / 2 !default;


////////////////////////////////////////////////////////////////////////////////
//
//                             Components
//
////////////////////////////////////////////////////////////////////////////////
// Define common padding and border radius sizes and more.


/////////////////////////////////////
//
//      Border Variables, etc.
//
/////////////////////////////////////

// // scss-docs-start border-variables
// $border-width:                1px !default;
// $border-widths: (
//   1: 1px,
//   2: 2px,
//   3: 3px,
//   4: 4px,
//   5: 5px
// ) !default;

// $border-color:                $gray-300 !default;
// // scss-docs-end border-variables



////////////////////////////////////////////////////////////////////////////////
//
//  Note: $border-radius is also used on buttons, form controls, dropdowns,
//  pagination, list-groups, etc. It's also used in various places within _utilities.scss.
//  Thus you may want to change these in their respective sections.
//
//  However, rather than making all those modifications,
//  it's easier to copy _utilities.scss as _custom-utilities.scss import that into
//  custom-bootstrap.scss. Then add changes as neeed. For example:
//
//          "rounded": (
//            property: border-radius,
//            class: rounded,
//            values: (
//              null: $border-radius,
//              0: 0,
//              1: $border-radius-sm,
//              2: $border-radius,
//              3: $border-radius-lg,
//              4: $border-radius-xl,                 <--
//              5: $border-radius-xxl,                <--
//              circle: 50%,
//              pill: $border-radius-pill
//            )
//          ),  
//
////////////////////////////////////////////////////////////////////////////////


// scss-docs-start border-radius-variables
// $border-radius:               .25rem !default;
// $border-radius-sm:            .2rem !default;
// $border-radius-lg:            .3rem !default; // 4.8px
$border-radius-xl:  10px; // Custom
$border-radius-xxl: 20px; // Custom - Anything larger than 20px starts to look a lot like $border-radius-pill
// $border-radius-pill:          50rem !default;
// scss-docs-end border-radius-variables


/////////////////////////////////////
//
//           Box Shadows
//
/////////////////////////////////////


// // scss-docs-start box-shadow-variables
// $box-shadow:                  0 .5rem 1rem rgba($black, .15) !default;
// $box-shadow-sm:               0 .125rem .25rem rgba($black, .075) !default;
// $box-shadow-lg:               0 1rem 3rem rgba($black, .175) !default;
// $box-shadow-inset:            inset 0 1px 2px rgba($black, .075) !default;
// // scss-docs-end box-shadow-variables



/////////////////////////////////////
//
// Active Color & Active BG Color
//
/////////////////////////////////////


// $component-active-color:      $white !default;
// $component-active-bg:         $primary !default; //! primary was used here -this may need modification.


/////////////////////////////////////
//
//              Carets
//
/////////////////////////////////////
//Presumably for dropdowns.


// // scss-docs-start caret-variables
// $caret-width:                 .3em !default;
// $caret-vertical-align:        $caret-width * .85 !default;
// $caret-spacing:               $caret-width * .85 !default;
// // scss-docs-end caret-variables


/////////////////////////////////////
//
//         Transitions
//
/////////////////////////////////////


// $transition-base:             all .2s ease-in-out !default;
// $transition-fade:             opacity .15s linear !default;
// // scss-docs-start collapse-transition
// $transition-collapse:         height .35s ease !default;
// // scss-docs-end collapse-transition



/////////////////////////////////////
//
//         Aspect Ratios
//
/////////////////////////////////////
//! This might be something worth modifying.


// // stylelint-disable function-disallowed-list
// // scss-docs-start aspect-ratios
// $aspect-ratios: (
//   "1x1": 100%,
//   "4x3": calc(3 / 4 * 100%),
//   "16x9": calc(9 / 16 * 100%),
//   "21x9": calc(9 / 21 * 100%)
// ) !default;
// // scss-docs-end aspect-ratios
// // stylelint-enable function-disallowed-list



////////////////////////////////////////////////////////////////////////////////
//
//                                Typography
//
////////////////////////////////////////////////////////////////////////////////
//Font, line-height, and color for body text, headings, and more.


// // scss-docs-start font-variables
// // stylelint-disable value-keyword-case
// $font-family-sans-serif:      system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
// $font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
// // stylelint-enable value-keyword-case
// $font-family-base:            var(--#{$variable-prefix}font-sans-serif) !default;
// $font-family-code:            var(--#{$variable-prefix}font-monospace) !default;

// // $font-size-root effects the value of `rem`, which is used for as well font sizes, paddings and margins
// // $font-size-base effects the font size of the body text
// $font-size-root:              null !default;
// $font-size-base:              1rem !default; // Assumes the browser default, typically `16px`
// $font-size-sm:                $font-size-base * .875 !default;
// $font-size-lg:                $font-size-base * 1.25 !default;

// $font-weight-lighter:         lighter !default;
// $font-weight-light:           300 !default;
// $font-weight-normal:          400 !default;
// $font-weight-bold:            700 !default;
// $font-weight-bolder:          bolder !default;

// $font-weight-base:            $font-weight-normal !default;

// $line-height-base:            1.5 !default;
// $line-height-sm:              1.25 !default;
// $line-height-lg:              2 !default;

// $h1-font-size:                $font-size-base * 2.5 !default;
// $h2-font-size:                $font-size-base * 2 !default;
// $h3-font-size:                $font-size-base * 1.75 !default;
// $h4-font-size:                $font-size-base * 1.5 !default;
// $h5-font-size:                $font-size-base * 1.25 !default;
// $h6-font-size:                $font-size-base !default;
// // scss-docs-end font-variables

// // scss-docs-start font-sizes
// $font-sizes: (
//   1: $h1-font-size,
//   2: $h2-font-size,
//   3: $h3-font-size,
//   4: $h4-font-size,
//   5: $h5-font-size,
//   6: $h6-font-size
// ) !default;
// // scss-docs-end font-sizes

// // scss-docs-start headings-variables
// $headings-margin-bottom:      $spacer / 2 !default;
// $headings-font-family:        null !default;
// $headings-font-style:         null !default;
// $headings-font-weight:        500 !default;
// $headings-line-height:        1.2 !default;
// $headings-color:              null !default;
// // scss-docs-end headings-variables

// // scss-docs-start display-headings
// $display-font-sizes: (
//   1: 5rem,
//   2: 4.5rem,
//   3: 4rem,
//   4: 3.5rem,
//   5: 3rem,
//   6: 2.5rem
// ) !default;

// $display-font-weight: 300 !default;
// $display-line-height: $headings-line-height !default;
// // scss-docs-end display-headings

// // scss-docs-start type-variables
// $lead-font-size:              $font-size-base * 1.25 !default;
// $lead-font-weight:            300 !default;

// $small-font-size:             .875em !default;

// $sub-sup-font-size:           .75em !default;

// $text-muted:                  $gray-600 !default;

// $initialism-font-size:        $small-font-size !default;

// $blockquote-margin-y:         $spacer !default;
// $blockquote-font-size:        $font-size-base * 1.25 !default;
// $blockquote-footer-color:     $gray-600 !default;
// $blockquote-footer-font-size: $small-font-size !default;

// $hr-margin-y:                 $spacer !default;
// $hr-color:                    inherit !default;
// $hr-height:                   $border-width !default;
// $hr-opacity:                  .25 !default;

// $legend-margin-bottom:        .5rem !default;
// $legend-font-size:            1.5rem !default;
// $legend-font-weight:          null !default;

// $mark-padding:                .2em !default;

// $dt-font-weight:              $font-weight-bold !default;

// $nested-kbd-font-weight:      $font-weight-bold !default;

// $list-inline-padding:         .5rem !default;

// $mark-bg:                     #fcf8e3 !default;
// // scss-docs-end type-variables


////////////////////////////////////////////////////////////////////////////////
//
//                                Tables
//
////////////////////////////////////////////////////////////////////////////////
// Customizes the `.table` component with basic values, each used across all table variations.


// scss-docs-start table-variables


// $table-cell-padding-y:        .5rem !default;
// $table-cell-padding-x:        .5rem !default;
// $table-cell-padding-y-sm:     .25rem !default;
// $table-cell-padding-x-sm:     .25rem !default;

// $table-cell-vertical-align:   top !default;

// $table-color:                 $body-color !default;
// $table-bg:                    transparent !default;

// $table-th-font-weight:        null !default;

// $table-striped-color:         $table-color !default;
// $table-striped-bg-factor:     .05 !default;
// $table-striped-bg:            rgba($black, $table-striped-bg-factor) !default;

// $table-active-color:          $table-color !default;
// $table-active-bg-factor:      .1 !default;
// $table-active-bg:             rgba($black, $table-active-bg-factor) !default;

// $table-hover-color:           $table-color !default;
// $table-hover-bg-factor:       .075 !default;
// $table-hover-bg:              rgba($black, $table-hover-bg-factor) !default;

// $table-border-factor:         .1 !default;
// $table-border-width:          $border-width !default;
// $table-border-color:          $border-color !default;

// $table-striped-order:         odd !default;

// $table-group-separator-color: currentColor !default;

// $table-caption-color:         $text-muted !default;

$table-bg-scale:              -80% !default; // Affects the shading of the table.


// scss-docs-end table-variables

// scss-docs-start table-loop
$table-variants: (
  // "primary":    shift-color($primary, $table-bg-scale),
  // "secondary":  shift-color($secondary, $table-bg-scale),
  // "success":    shift-color($success, $table-bg-scale),
  // "info":       shift-color($info, $table-bg-scale),
  // "warning":    shift-color($warning, $table-bg-scale),
  // "danger":     shift-color($danger, $table-bg-scale),
  "light":      $light,
  "dark":       $dark,
  "blue":    shift-color($blue, $table-bg-scale),
  "gray":    shift-color($gray, $table-bg-scale),
  "green":   shift-color($green, $table-bg-scale),
  "teal":    shift-color($teal, $table-bg-scale), //Instead of $info / $cyan
  "yellow":  shift-color($yellow, $table-bg-scale),
  "red":     shift-color($red, $table-bg-scale)
);
// scss-docs-end table-loop

